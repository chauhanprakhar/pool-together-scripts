{
  "address": "0x32e8D4c9d1B711BC958d0Ce8D14b41F77Bb03a64",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract ATokenInterface",
          "name": "_aToken",
          "type": "address"
        },
        {
          "internalType": "contract IAaveIncentivesController",
          "name": "_incentivesController",
          "type": "address"
        },
        {
          "internalType": "contract ILendingPoolAddressesProviderRegistry",
          "name": "_lendingPoolAddressesProviderRegistry",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "_decimals",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IAToken",
          "name": "aToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract ILendingPoolAddressesProviderRegistry",
          "name": "lendingPoolAddressesProviderRegistry",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "decimals",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "ATokenYieldSourceInitialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Claimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousManager",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newManager",
          "type": "address"
        }
      ],
      "name": "ManagerTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "pendingOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipOffered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "RedeemedToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Sponsored",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "SuppliedTokenTo",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "TransferredERC20",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "aToken",
      "outputs": [
        {
          "internalType": "contract ATokenInterface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "approveMaxAmount",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "balanceOfToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "claimRewards",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "depositToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "incentivesController",
      "outputs": [
        {
          "internalType": "contract IAaveIncentivesController",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lendingPoolAddressesProviderRegistry",
      "outputs": [
        {
          "internalType": "contract ILendingPoolAddressesProviderRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "manager",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "redeemAmount",
          "type": "uint256"
        }
      ],
      "name": "redeemToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newManager",
          "type": "address"
        }
      ],
      "name": "setManager",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "sponsor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "mintAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "supplyTokenTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "erc20Token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferERC20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xe8b1baf5ed76b89837e093912d01b598080a6f1730451d6643aa1b9cbd4d794c",
  "receipt": {
    "to": null,
    "from": "0xE0F4217390221aF47855E094F6e112D43C8698fE",
    "contractAddress": "0x32e8D4c9d1B711BC958d0Ce8D14b41F77Bb03a64",
    "transactionIndex": 225,
    "gasUsed": "2672012",
    "logsBloom": "0x00000000000000001000100000000000000000000000000000a00000000000000000200000000000000000000000000000b00000000000000000000000200000000000000000000008000000000000000001000000002000000000000000040000000000020000000000000000000800000000000800000000000000000000400000020000000200000000000000000000000000010000000000000000000000020000000000200000000000000000000000000000000000000000000000000000000000000000000000000200000000000008000000000000000000000020000010001000000000000000008000000000000001000008000000000000000000",
    "blockHash": "0x023cf717c9a644e53928acab4b7c28afbb89994caee3b4dd1f4f71373234ed9b",
    "transactionHash": "0xe8b1baf5ed76b89837e093912d01b598080a6f1730451d6643aa1b9cbd4d794c",
    "logs": [
      {
        "transactionIndex": 225,
        "blockNumber": 13419454,
        "transactionHash": "0xe8b1baf5ed76b89837e093912d01b598080a6f1730451d6643aa1b9cbd4d794c",
        "address": "0x32e8D4c9d1B711BC958d0Ce8D14b41F77Bb03a64",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000da63d70332139e6a8eca7513f4b6e2e0dc93b693"
        ],
        "data": "0x",
        "logIndex": 437,
        "blockHash": "0x023cf717c9a644e53928acab4b7c28afbb89994caee3b4dd1f4f71373234ed9b"
      },
      {
        "transactionIndex": 225,
        "blockNumber": 13419454,
        "transactionHash": "0xe8b1baf5ed76b89837e093912d01b598080a6f1730451d6643aa1b9cbd4d794c",
        "address": "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",
        "topics": [
          "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
          "0x00000000000000000000000032e8d4c9d1b711bc958d0ce8d14b41f77bb03a64",
          "0x0000000000000000000000007d2768de32b0b80b7a3454c06bdac94a69ddc7a9"
        ],
        "data": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
        "logIndex": 438,
        "blockHash": "0x023cf717c9a644e53928acab4b7c28afbb89994caee3b4dd1f4f71373234ed9b"
      },
      {
        "transactionIndex": 225,
        "blockNumber": 13419454,
        "transactionHash": "0xe8b1baf5ed76b89837e093912d01b598080a6f1730451d6643aa1b9cbd4d794c",
        "address": "0x32e8D4c9d1B711BC958d0Ce8D14b41F77Bb03a64",
        "topics": [
          "0xfba57dff735bfaf5226b0a6e4ea8161ce10896963a36f6db20759f10b0055b40",
          "0x000000000000000000000000bcca60bb61934080951369a648fb03df4f96263c"
        ],
        "data": "0x00000000000000000000000052d306e36e3b6b02c153d0266ff0f85d18bcd413000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000da63d70332139e6a8eca7513f4b6e2e0dc93b6930000000000000000000000000000000000000000000000000000000000000018506f6f6c546f676574686572206155534443205969656c64000000000000000000000000000000000000000000000000000000000000000000000000000000085054615553444359000000000000000000000000000000000000000000000000",
        "logIndex": 439,
        "blockHash": "0x023cf717c9a644e53928acab4b7c28afbb89994caee3b4dd1f4f71373234ed9b"
      }
    ],
    "blockNumber": 13419454,
    "cumulativeGasUsed": "28464041",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xBcca60bB61934080951369a648Fb03DF4F96263C",
    "0xd784927Ff2f95ba542BfC824c8a8a98F3495f6b5",
    "0x52D306e36E3B6B02c153d0266ff0f85d18BCD413",
    6,
    "PTaUSDCY",
    "PoolTogether aUSDC Yield",
    "0xDa63D70332139E6A8eCA7513f4b6E2E0Dc93b693"
  ],
  "solcInputHash": "7e8084d0a22db9e877c42567b125a31e",
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ATokenInterface\",\"name\":\"_aToken\",\"type\":\"address\"},{\"internalType\":\"contract IAaveIncentivesController\",\"name\":\"_incentivesController\",\"type\":\"address\"},{\"internalType\":\"contract ILendingPoolAddressesProviderRegistry\",\"name\":\"_lendingPoolAddressesProviderRegistry\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"_decimals\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IAToken\",\"name\":\"aToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract ILendingPoolAddressesProviderRegistry\",\"name\":\"lendingPoolAddressesProviderRegistry\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ATokenYieldSourceInitialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Claimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousManager\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newManager\",\"type\":\"address\"}],\"name\":\"ManagerTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pendingOwner\",\"type\":\"address\"}],\"name\":\"OwnershipOffered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RedeemedToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Sponsored\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"SuppliedTokenTo\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"TransferredERC20\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"aToken\",\"outputs\":[{\"internalType\":\"contract ATokenInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMaxAmount\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"balanceOfToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"claimRewards\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"incentivesController\",\"outputs\":[{\"internalType\":\"contract IAaveIncentivesController\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lendingPoolAddressesProviderRegistry\",\"outputs\":[{\"internalType\":\"contract ILendingPoolAddressesProviderRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"redeemAmount\",\"type\":\"uint256\"}],\"name\":\"redeemToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newManager\",\"type\":\"address\"}],\"name\":\"setManager\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sponsor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"mintAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"supplyTokenTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"erc20Token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract inherits from the ERC20 implementation to keep track of users depositsThis contract inherits AssetManager which extends OwnableUpgradable\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"approveMaxAmount()\":{\"details\":\"Emergency function to re-approve max amount if approval amount dropped too low\",\"returns\":{\"_0\":\"true if operation is successful\"}},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"balanceOfToken(address)\":{\"params\":{\"addr\":\"User address\"},\"returns\":{\"_0\":\"The underlying balance of asset tokens\"}},\"claimOwnership()\":{\"details\":\"This function is only callable by the `_pendingOwner`.\"},\"claimRewards(address)\":{\"params\":{\"to\":\"Address where the claimed rewards will be sent.\"},\"returns\":{\"_0\":\"True if operation was successful.\"}},\"constructor\":{\"params\":{\"_aToken\":\"Aave aToken address\",\"_decimals\":\"Number of decimals the shares (inhereted ERC20) will have. Set as same as underlying asset to ensure sane ExchangeRates\",\"_incentivesController\":\"Aave incentivesController address\",\"_lendingPoolAddressesProviderRegistry\":\"Aave lendingPoolAddressesProviderRegistry address\",\"_name\":\"Token name for the underlying shares ERC20\",\"_symbol\":\"Token symbol for the underlying shares ERC20\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"depositToken()\":{\"returns\":{\"_0\":\"The ERC20 asset token address\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"manager()\":{\"returns\":{\"_0\":\"Current `_manager` address.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"pendingOwner()\":{\"returns\":{\"_0\":\"Current `_pendingOwner` address.\"}},\"redeemToken(uint256)\":{\"details\":\"Shares corresponding to the number of tokens withdrawn are burnt from the user's balanceAsset tokens are withdrawn from Aave, then transferred from the yield source to the user's wallet\",\"params\":{\"redeemAmount\":\"The amount of asset tokens to be redeemed\"},\"returns\":{\"_0\":\"The actual amount of asset tokens that were redeemed\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setManager(address)\":{\"details\":\"Throws if called by any account other than the owner.\",\"params\":{\"_newManager\":\"New _manager address.\"},\"returns\":{\"_0\":\"Boolean to indicate if the operation was successful or not.\"}},\"sponsor(uint256)\":{\"details\":\"This allows anyone to distribute tokens among the share holders\",\"params\":{\"amount\":\"The amount of tokens to deposit\"}},\"supplyTokenTo(uint256,address)\":{\"details\":\"Shares corresponding to the number of tokens supplied are mint to the user's balanceAsset tokens are supplied to the yield source, then deposited into Aave\",\"params\":{\"mintAmount\":\"The amount of asset tokens to be supplied\",\"to\":\"The user whose balance will receive the tokens\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferERC20(address,address,uint256)\":{\"details\":\"This function is only callable by the owner or asset manager\",\"params\":{\"amount\":\"The amount of tokens to transfer\",\"erc20Token\":\"The ERC20 token to transfer\",\"to\":\"The recipient of the tokens\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"params\":{\"_newOwner\":\"Address to transfer ownership to.\"}}},\"stateVariables\":{\"ADDRESSES_PROVIDER_ID\":{\"details\":\"Aave genesis market LendingPoolAddressesProvider's IDThis variable could evolve in the future if we decide to support other markets\"},\"REFERRAL_CODE\":{\"details\":\"PoolTogether's Aave Referral Code\"}},\"title\":\"Aave Yield Source integration contract, implementing PoolTogether's generic yield source interface\",\"version\":1},\"userdoc\":{\"events\":{\"ATokenYieldSourceInitialized(address,address,uint8,string,string,address)\":{\"notice\":\"Emitted when the yield source is initialized\"},\"Claimed(address,address,uint256)\":{\"notice\":\"Emitted when Aave rewards have been claimed\"},\"RedeemedToken(address,uint256,uint256)\":{\"notice\":\"Emitted when asset tokens are redeemed from the yield source\"},\"Sponsored(address,uint256)\":{\"notice\":\"Emitted when asset tokens are supplied to sponsor the yield source\"},\"SuppliedTokenTo(address,uint256,uint256,address)\":{\"notice\":\"Emitted when asset tokens are supplied to the yield source\"},\"TransferredERC20(address,address,uint256,address)\":{\"notice\":\"Emitted when ERC20 tokens other than yield source's aToken are withdrawn from the yield source\"}},\"kind\":\"user\",\"methods\":{\"aToken()\":{\"notice\":\"Interface for the yield-bearing Aave aToken\"},\"approveMaxAmount()\":{\"notice\":\"Approve lending pool contract to spend max uint256 amount\"},\"balanceOfToken(address)\":{\"notice\":\"Returns user total balance (in asset tokens). This includes the deposits and interest.\"},\"claimOwnership()\":{\"notice\":\"Allows the `_pendingOwner` address to finalize the transfer.\"},\"claimRewards(address)\":{\"notice\":\"Claims the accrued rewards for the aToken, accumulating any pending rewards.\"},\"constructor\":{\"notice\":\"Initializes the yield source with Aave aToken\"},\"depositToken()\":{\"notice\":\"Returns the ERC20 asset token used for deposits\"},\"incentivesController()\":{\"notice\":\"Interface for Aave incentivesController\"},\"lendingPoolAddressesProviderRegistry()\":{\"notice\":\"Interface for Aave lendingPoolAddressesProviderRegistry\"},\"manager()\":{\"notice\":\"Gets current `_manager`.\"},\"owner()\":{\"notice\":\"Returns the address of the current owner.\"},\"pendingOwner()\":{\"notice\":\"Gets current `_pendingOwner`.\"},\"redeemToken(uint256)\":{\"notice\":\"Redeems asset tokens from the yield source\"},\"renounceOwnership()\":{\"notice\":\"Renounce ownership of the contract.\"},\"setManager(address)\":{\"notice\":\"Set or change of manager.\"},\"sponsor(uint256)\":{\"notice\":\"Allows someone to deposit into the yield source without receiving any shares\"},\"supplyTokenTo(uint256,address)\":{\"notice\":\"Supplies asset tokens to the yield source\"},\"transferERC20(address,address,uint256)\":{\"notice\":\"Transfer ERC20 tokens other than the aTokens held by this contract to the recipient address\"},\"transferOwnership(address)\":{\"notice\":\"Allows current owner to set the `_pendingOwner` address.\"}},\"notice\":\"Yield source for a PoolTogether prize pool that generates yield by depositing into Aave V2\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@pooltogether/aave-yield-source/contracts/yield-source/ATokenYieldSource.sol\":\"ATokenYieldSource\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and make it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x842ccf9a6cd33e17b7acef8372ca42090755217b358fe0c44c98e951ea549d3a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `recipient` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(_msgSender(), recipient, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        _approve(_msgSender(), spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` and `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``sender``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        _transfer(sender, recipient, amount);\\n\\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\\n        require(currentAllowance >= amount, \\\"ERC20: transfer amount exceeds allowance\\\");\\n        unchecked {\\n            _approve(sender, _msgSender(), currentAllowance - amount);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(_msgSender(), spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` cannot be the zero address.\\n     * - `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) internal virtual {\\n        require(sender != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(recipient != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(sender, recipient, amount);\\n\\n        uint256 senderBalance = _balances[sender];\\n        require(senderBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[sender] = senderBalance - amount;\\n        }\\n        _balances[recipient] += amount;\\n\\n        emit Transfer(sender, recipient, amount);\\n\\n        _afterTokenTransfer(sender, recipient, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        _balances[account] += amount;\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n        }\\n        _totalSupply -= amount;\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0xb03df8481a954604ad0c9125680893b2e3f7ff770fe470e38b89ac61b84e8072\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x02348b2e4b9f3200c7e3907c5c2661643a6d8520e9f79939fbb9b4005a54894d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        assembly {\\n            size := extcodesize(account)\\n        }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3336baae5cf23e94274d75336e2d412193be508504aee185e61dc7d58cd05c8a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x8666f020bd8fc9dc14f07e2ebc52b5f236ab4cdde7c77679b08cb2f94730043b\",\"license\":\"MIT\"},\"@pooltogether/aave-yield-source/contracts/external/aave/ATokenInterface.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\n\\npragma solidity 0.8.6;\\n\\nimport \\\"./IAToken.sol\\\";\\n\\ninterface ATokenInterface is IAToken {\\n  /**\\n   * @dev Returns the address of the underlying asset of this aToken (E.g. WETH for aWETH)\\n   **/\\n  /* solhint-disable-next-line func-name-mixedcase */\\n  function UNDERLYING_ASSET_ADDRESS() external view returns (address);\\n}\\n\",\"keccak256\":\"0x871b7f08ef0b5dd0e0f002fa8065b434d60ec300d3309741b7f22e8b7fdce9d4\",\"license\":\"agpl-3.0\"},\"@pooltogether/aave-yield-source/contracts/external/aave/IAToken.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.8.6;\\n\\nimport {IERC20} from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface IAToken is IERC20 {\\n  /**\\n   * @dev Emitted after the mint action\\n   * @param from The address performing the mint\\n   * @param value The amount being\\n   * @param index The new liquidity index of the reserve\\n   **/\\n  event Mint(address indexed from, uint256 value, uint256 index);\\n\\n  /**\\n   * @dev Mints `amount` aTokens to `user`\\n   * @param user The address receiving the minted tokens\\n   * @param amount The amount of tokens getting minted\\n   * @param index The new liquidity index of the reserve\\n   * @return `true` if the the previous balance of the user was 0\\n   */\\n  function mint(\\n    address user,\\n    uint256 amount,\\n    uint256 index\\n  ) external returns (bool);\\n\\n  /**\\n   * @dev Emitted after aTokens are burned\\n   * @param from The owner of the aTokens, getting them burned\\n   * @param target The address that will receive the underlying\\n   * @param value The amount being burned\\n   * @param index The new liquidity index of the reserve\\n   **/\\n  event Burn(address indexed from, address indexed target, uint256 value, uint256 index);\\n\\n  /**\\n   * @dev Emitted during the transfer action\\n   * @param from The user whose tokens are being transferred\\n   * @param to The recipient\\n   * @param value The amount being transferred\\n   * @param index The new liquidity index of the reserve\\n   **/\\n  event BalanceTransfer(address indexed from, address indexed to, uint256 value, uint256 index);\\n\\n  /**\\n   * @dev Burns aTokens from `user` and sends the equivalent amount of underlying to `receiverOfUnderlying`\\n   * @param user The owner of the aTokens, getting them burned\\n   * @param receiverOfUnderlying The address that will receive the underlying\\n   * @param amount The amount being burned\\n   * @param index The new liquidity index of the reserve\\n   **/\\n  function burn(\\n    address user,\\n    address receiverOfUnderlying,\\n    uint256 amount,\\n    uint256 index\\n  ) external;\\n\\n  /**\\n   * @dev Mints aTokens to the reserve treasury\\n   * @param amount The amount of tokens getting minted\\n   * @param index The new liquidity index of the reserve\\n   */\\n  function mintToTreasury(uint256 amount, uint256 index) external;\\n\\n  /**\\n   * @dev Transfers aTokens in the event of a borrow being liquidated, in case the liquidators reclaims the aToken\\n   * @param from The address getting liquidated, current owner of the aTokens\\n   * @param to The recipient\\n   * @param value The amount of tokens getting transferred\\n   **/\\n  function transferOnLiquidation(\\n    address from,\\n    address to,\\n    uint256 value\\n  ) external;\\n\\n  /**\\n   * @dev Transfers the underlying asset to `target`. Used by the LendingPool to transfer\\n   * assets in borrow(), withdraw() and flashLoan()\\n   * @param user The recipient of the aTokens\\n   * @param amount The amount getting transferred\\n   * @return The amount transferred\\n   **/\\n  function transferUnderlyingTo(address user, uint256 amount) external returns (uint256);\\n}\\n\",\"keccak256\":\"0x0341583b9f47e153002d86c66193ba1798a924148f4c64c0c11d55f514a6c642\",\"license\":\"agpl-3.0\"},\"@pooltogether/aave-yield-source/contracts/external/aave/IAaveIncentivesController.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\n\\npragma solidity 0.8.6;\\n\\npragma experimental ABIEncoderV2;\\n\\ninterface IAaveIncentivesController {\\n  event RewardsAccrued(address indexed user, uint256 amount);\\n\\n  event RewardsClaimed(address indexed user, address indexed to, uint256 amount);\\n\\n  // Commented out to avoid displaying warnings about duplicate definition\\n  // event RewardsClaimed(\\n  //   address indexed user,\\n  //   address indexed to,\\n  //   address indexed claimer,\\n  //   uint256 amount\\n  // );\\n\\n  event ClaimerSet(address indexed user, address indexed claimer);\\n\\n  /*\\n   * @dev Returns the configuration of the distribution for a certain asset\\n   * @param asset The address of the reference asset of the distribution\\n   * @return The asset index, the emission per second and the last updated timestamp\\n   **/\\n  function getAssetData(address asset)\\n    external\\n    view\\n    returns (\\n      uint256,\\n      uint256,\\n      uint256\\n    );\\n\\n  /**\\n   * @dev Whitelists an address to claim the rewards on behalf of another address\\n   * @param user The address of the user\\n   * @param claimer The address of the claimer\\n   */\\n  function setClaimer(address user, address claimer) external;\\n\\n  /**\\n   * @dev Returns the whitelisted claimer for a certain address (0x0 if not set)\\n   * @param user The address of the user\\n   * @return The claimer address\\n   */\\n  function getClaimer(address user) external view returns (address);\\n\\n  /**\\n   * @dev Configure assets for a certain rewards emission\\n   * @param assets The assets to incentivize\\n   * @param emissionsPerSecond The emission for each asset\\n   */\\n  function configureAssets(address[] calldata assets, uint256[] calldata emissionsPerSecond)\\n    external;\\n\\n  /**\\n   * @dev Called by the corresponding asset on any update that affects the rewards distribution\\n   * @param asset The address of the user\\n   * @param userBalance The balance of the user of the asset in the lending pool\\n   * @param totalSupply The total supply of the asset in the lending pool\\n   **/\\n  function handleAction(\\n    address asset,\\n    uint256 userBalance,\\n    uint256 totalSupply\\n  ) external;\\n\\n  /**\\n   * @dev Returns the total of rewards of an user, already accrued + not yet accrued\\n   * @param user The address of the user\\n   * @return The rewards\\n   **/\\n  function getRewardsBalance(address[] calldata assets, address user)\\n    external\\n    view\\n    returns (uint256);\\n\\n  /**\\n   * @dev Claims reward for an user, on all the assets of the lending pool, accumulating the pending rewards\\n   * @param amount Amount of rewards to claim\\n   * @param to Address that will be receiving the rewards\\n   * @return Rewards claimed\\n   **/\\n  function claimRewards(\\n    address[] calldata assets,\\n    uint256 amount,\\n    address to\\n  ) external returns (uint256);\\n\\n  /**\\n   * @dev Claims reward for an user on behalf, on all the assets of the lending pool, accumulating the pending rewards. The caller must\\n   * be whitelisted via \\\"allowClaimOnBehalf\\\" function by the RewardsAdmin role manager\\n   * @param amount Amount of rewards to claim\\n   * @param user Address to check and claim rewards\\n   * @param to Address that will be receiving the rewards\\n   * @return Rewards claimed\\n   **/\\n  function claimRewardsOnBehalf(\\n    address[] calldata assets,\\n    uint256 amount,\\n    address user,\\n    address to\\n  ) external returns (uint256);\\n\\n  /**\\n   * @dev returns the unclaimed rewards of the user\\n   * @param user the address of the user\\n   * @return the unclaimed user rewards\\n   */\\n  function getUserUnclaimedRewards(address user) external view returns (uint256);\\n\\n  /**\\n   * @dev returns the unclaimed rewards of the user\\n   * @param user the address of the user\\n   * @param asset The asset to incentivize\\n   * @return the user index for the asset\\n   */\\n  function getUserAssetData(address user, address asset) external view returns (uint256);\\n\\n  /**\\n   * @dev for backward compatibility with previous implementation of the Incentives controller\\n   */\\n  function REWARD_TOKEN() external view returns (address);\\n\\n  /**\\n   * @dev for backward compatibility with previous implementation of the Incentives controller\\n   */\\n  function PRECISION() external view returns (uint8);\\n\\n  /**\\n   * @dev Gets the distribution end timestamp of the emissions\\n   */\\n  function DISTRIBUTION_END() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xbe939adc6c712bf9d377e472c38ee0ad24e852b00e4fdfc2521f66521985d539\",\"license\":\"agpl-3.0\"},\"@pooltogether/aave-yield-source/contracts/external/aave/ILendingPool.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.8.6;\\n\\ninterface ILendingPool {\\n\\n  /**\\n   * @dev Deposits an `amount` of underlying asset into the reserve, receiving in return overlying aTokens.\\n   * - E.g. User deposits 100 USDC and gets in return 100 aUSDC\\n   * @param asset The address of the underlying asset to deposit\\n   * @param amount The amount to be deposited\\n   * @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\\n   *   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\\n   *   is a different wallet\\n   * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\\n   *   0 if the action is executed directly by the user, without any middle-man\\n   **/\\n  function deposit(\\n    address asset,\\n    uint256 amount,\\n    address onBehalfOf,\\n    uint16 referralCode\\n  ) external;\\n\\n  /**\\n   * @dev Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned\\n   * E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC\\n   * @param asset The address of the underlying asset to withdraw\\n   * @param amount The underlying amount to be withdrawn\\n   *   - Send the value type(uint256).max in order to withdraw the whole aToken balance\\n   * @param to Address that will receive the underlying, same as msg.sender if the user\\n   *   wants to receive it on his own wallet, or a different address if the beneficiary is a\\n   *   different wallet\\n   * @return The final amount withdrawn\\n   **/\\n  function withdraw(\\n    address asset,\\n    uint256 amount,\\n    address to\\n  ) external returns (uint256);\\n\\n}\\n\",\"keccak256\":\"0x813e2714c8deaac5f8e0f2a5c17600d1fbaf592773ff40cc8360df61ebde44ff\",\"license\":\"agpl-3.0\"},\"@pooltogether/aave-yield-source/contracts/external/aave/ILendingPoolAddressesProvider.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.8.6;\\n\\n/**\\n * @title LendingPoolAddressesProvider contract\\n * @dev Main registry of addresses part of or connected to the protocol, including permissioned roles\\n * - Acting also as factory of proxies and admin of those, so with right to change its implementations\\n * - Owned by the Aave Governance\\n * @author Aave\\n **/\\ninterface ILendingPoolAddressesProvider {\\n  event MarketIdSet(string newMarketId);\\n  event LendingPoolUpdated(address indexed newAddress);\\n  event ConfigurationAdminUpdated(address indexed newAddress);\\n  event EmergencyAdminUpdated(address indexed newAddress);\\n  event LendingPoolConfiguratorUpdated(address indexed newAddress);\\n  event LendingPoolCollateralManagerUpdated(address indexed newAddress);\\n  event PriceOracleUpdated(address indexed newAddress);\\n  event LendingRateOracleUpdated(address indexed newAddress);\\n  event ProxyCreated(bytes32 id, address indexed newAddress);\\n  event AddressSet(bytes32 id, address indexed newAddress, bool hasProxy);\\n\\n  function getMarketId() external view returns (string memory);\\n\\n  function setMarketId(string calldata marketId) external;\\n\\n  function setAddress(bytes32 id, address newAddress) external;\\n\\n  function setAddressAsProxy(bytes32 id, address impl) external;\\n\\n  function getAddress(bytes32 id) external view returns (address);\\n\\n  function getLendingPool() external view returns (address);\\n\\n  function setLendingPoolImpl(address pool) external;\\n\\n  function getLendingPoolConfigurator() external view returns (address);\\n\\n  function setLendingPoolConfiguratorImpl(address configurator) external;\\n\\n  function getLendingPoolCollateralManager() external view returns (address);\\n\\n  function setLendingPoolCollateralManager(address manager) external;\\n\\n  function getPoolAdmin() external view returns (address);\\n\\n  function setPoolAdmin(address admin) external;\\n\\n  function getEmergencyAdmin() external view returns (address);\\n\\n  function setEmergencyAdmin(address admin) external;\\n\\n  function getPriceOracle() external view returns (address);\\n\\n  function setPriceOracle(address priceOracle) external;\\n\\n  function getLendingRateOracle() external view returns (address);\\n\\n  function setLendingRateOracle(address lendingRateOracle) external;\\n}\\n\",\"keccak256\":\"0x3a829abb20080962e0730d0cc414b5f9d4c3933df610830ee71108caeb59f7cc\",\"license\":\"agpl-3.0\"},\"@pooltogether/aave-yield-source/contracts/external/aave/ILendingPoolAddressesProviderRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.8.6;\\n\\n/**\\n * @title LendingPoolAddressesProviderRegistry contract\\n * @dev Main registry of LendingPoolAddressesProvider of multiple Aave protocol's markets\\n * - Used for indexing purposes of Aave protocol's markets\\n * - The id assigned to a LendingPoolAddressesProvider refers to the market it is connected with,\\n *   for example with `0` for the Aave main market and `1` for the next created\\n * @author Aave\\n **/\\ninterface ILendingPoolAddressesProviderRegistry {\\n  event AddressesProviderRegistered(address indexed newAddress);\\n  event AddressesProviderUnregistered(address indexed newAddress);\\n\\n  function getAddressesProvidersList() external view returns (address[] memory);\\n\\n  function getAddressesProviderIdByAddress(address addressesProvider)\\n    external\\n    view\\n    returns (uint256);\\n\\n  function registerAddressesProvider(address provider, uint256 id) external;\\n\\n  function unregisterAddressesProvider(address provider) external;\\n}\\n\",\"keccak256\":\"0xc25f67d1627d5528123436a3724624886a69112b9c999cdaf02c39ad83902745\",\"license\":\"agpl-3.0\"},\"@pooltogether/aave-yield-source/contracts/external/aave/IProtocolYieldSource.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity 0.8.6;\\n\\nimport \\\"@pooltogether/yield-source-interface/contracts/IYieldSource.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\n/// @title The interface used for all Yield Sources for the PoolTogether protocol\\n/// @dev There are two privileged roles: the owner and the asset manager.  The owner can configure the asset managers.\\ninterface IProtocolYieldSource is IYieldSource {\\n  /// @notice Allows the owner to transfer ERC20 tokens held by this contract to the target address.\\n  /// @dev This function is callable by the owner or asset manager.\\n  /// This function should not be able to transfer any tokens that represent user deposits.\\n  /// @param token The ERC20 token to transfer\\n  /// @param to The recipient of the tokens\\n  /// @param amount The amount of tokens to transfer\\n  function transferERC20(IERC20 token, address to, uint256 amount) external;\\n\\n  /// @notice Allows someone to deposit into the yield source without receiving any shares.  The deposited token will be the same as token()\\n  /// This allows anyone to distribute tokens among the share holders.\\n  function sponsor(uint256 amount) external;\\n}\\n\",\"keccak256\":\"0xe528dc5a23cee18141e17a1fa8febd14e2aba9db6d62e6d178029f467611c7e3\",\"license\":\"GPL-3.0\"},\"@pooltogether/aave-yield-source/contracts/yield-source/ATokenYieldSource.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity 0.8.6;\\n\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\nimport \\\"@pooltogether/fixed-point/contracts/FixedPoint.sol\\\";\\nimport \\\"@pooltogether/owner-manager-contracts/contracts/Manageable.sol\\\";\\n\\nimport \\\"../external/aave/ILendingPool.sol\\\";\\nimport \\\"../external/aave/ILendingPoolAddressesProvider.sol\\\";\\nimport \\\"../external/aave/ILendingPoolAddressesProviderRegistry.sol\\\";\\nimport \\\"../external/aave/ATokenInterface.sol\\\";\\nimport \\\"../external/aave/IAaveIncentivesController.sol\\\";\\nimport \\\"../external/aave/IProtocolYieldSource.sol\\\";\\n\\n/// @title Aave Yield Source integration contract, implementing PoolTogether's generic yield source interface\\n/// @dev This contract inherits from the ERC20 implementation to keep track of users deposits\\n/// @dev This contract inherits AssetManager which extends OwnableUpgradable\\n/// @notice Yield source for a PoolTogether prize pool that generates yield by depositing into Aave V2\\ncontract ATokenYieldSource is ERC20, IProtocolYieldSource, Manageable, ReentrancyGuard {\\n  using SafeMath for uint256;\\n  using SafeERC20 for IERC20;\\n\\n  /// @notice Emitted when the yield source is initialized\\n  event ATokenYieldSourceInitialized(\\n    IAToken indexed aToken,\\n    ILendingPoolAddressesProviderRegistry lendingPoolAddressesProviderRegistry,\\n    uint8 decimals,\\n    string name,\\n    string symbol,\\n    address owner\\n  );\\n\\n  /// @notice Emitted when asset tokens are redeemed from the yield source\\n  event RedeemedToken(\\n    address indexed from,\\n    uint256 shares,\\n    uint256 amount\\n  );\\n\\n  /// @notice Emitted when Aave rewards have been claimed\\n  event Claimed(\\n    address indexed user,\\n    address indexed to,\\n    uint256 amount\\n  );\\n\\n  /// @notice Emitted when asset tokens are supplied to the yield source\\n  event SuppliedTokenTo(\\n    address indexed from,\\n    uint256 shares,\\n    uint256 amount,\\n    address indexed to\\n  );\\n\\n  /// @notice Emitted when asset tokens are supplied to sponsor the yield source\\n  event Sponsored(\\n    address indexed from,\\n    uint256 amount\\n  );\\n\\n  /// @notice Emitted when ERC20 tokens other than yield source's aToken are withdrawn from the yield source\\n  event TransferredERC20(\\n    address indexed from,\\n    address indexed to,\\n    uint256 amount,\\n    IERC20 indexed token\\n  );\\n\\n  /// @notice Interface for the yield-bearing Aave aToken\\n  ATokenInterface public aToken;\\n\\n  /// @notice Interface for Aave incentivesController\\n  IAaveIncentivesController public incentivesController;\\n\\n  /// @notice Interface for Aave lendingPoolAddressesProviderRegistry\\n  ILendingPoolAddressesProviderRegistry public lendingPoolAddressesProviderRegistry;\\n\\n  uint8 internal __decimals;\\n\\n  /// @dev Aave genesis market LendingPoolAddressesProvider's ID\\n  /// @dev This variable could evolve in the future if we decide to support other markets\\n  uint256 private constant ADDRESSES_PROVIDER_ID = uint256(0);\\n\\n  /// @dev PoolTogether's Aave Referral Code\\n  uint16 private constant REFERRAL_CODE = uint16(188);\\n\\n  /// @notice Initializes the yield source with Aave aToken\\n  /// @param _aToken Aave aToken address\\n  /// @param _incentivesController Aave incentivesController address\\n  /// @param _lendingPoolAddressesProviderRegistry Aave lendingPoolAddressesProviderRegistry address\\n  /// @param _decimals Number of decimals the shares (inhereted ERC20) will have. Set as same as underlying asset to ensure sane ExchangeRates\\n  /// @param _symbol Token symbol for the underlying shares ERC20\\n  /// @param _name Token name for the underlying shares ERC20\\n  constructor (\\n    ATokenInterface _aToken,\\n    IAaveIncentivesController _incentivesController,\\n    ILendingPoolAddressesProviderRegistry _lendingPoolAddressesProviderRegistry,\\n    uint8 _decimals,\\n    string memory _symbol,\\n    string memory _name,\\n    address _owner\\n  ) Ownable(_owner) ERC20(_name, _symbol) ReentrancyGuard()\\n  {\\n    require(address(_aToken) != address(0), \\\"ATokenYieldSource/aToken-not-zero-address\\\");\\n    aToken = _aToken;\\n\\n    require(address(_incentivesController) != address(0), \\\"ATokenYieldSource/incentivesController-not-zero-address\\\");\\n    incentivesController = _incentivesController;\\n\\n    require(address(_lendingPoolAddressesProviderRegistry) != address(0), \\\"ATokenYieldSource/lendingPoolRegistry-not-zero-address\\\");\\n    lendingPoolAddressesProviderRegistry = _lendingPoolAddressesProviderRegistry;\\n\\n    require(_owner != address(0), \\\"ATokenYieldSource/owner-not-zero-address\\\");\\n\\n    require(_decimals > 0, \\\"ATokenYieldSource/decimals-gt-zero\\\");\\n    __decimals = _decimals;\\n\\n    // approve once for max amount\\n    IERC20(_tokenAddress()).safeApprove(address(_lendingPool()), type(uint256).max);\\n\\n    emit ATokenYieldSourceInitialized (\\n      _aToken,\\n      _lendingPoolAddressesProviderRegistry,\\n      _decimals,\\n      _name,\\n      _symbol,\\n      _owner\\n    );\\n  }\\n\\n  function decimals() public override view returns (uint8) {\\n    return __decimals;\\n  }\\n\\n  /// @notice Approve lending pool contract to spend max uint256 amount\\n  /// @dev Emergency function to re-approve max amount if approval amount dropped too low\\n  /// @return true if operation is successful\\n  function approveMaxAmount() external onlyOwner returns (bool) {\\n    address _lendingPoolAddress = address(_lendingPool());\\n    IERC20 _underlyingAsset = IERC20(_tokenAddress());\\n    uint256 _allowance = _underlyingAsset.allowance(address(this), _lendingPoolAddress);\\n\\n    _underlyingAsset.safeIncreaseAllowance(_lendingPoolAddress, type(uint256).max.sub(_allowance));\\n    return true;\\n  }\\n\\n  /// @notice Returns the ERC20 asset token used for deposits\\n  /// @return The ERC20 asset token address\\n  function depositToken() public view override returns (address) {\\n    return _tokenAddress();\\n  }\\n\\n  /// @notice Returns the underlying asset token address\\n  /// @return Underlying asset token address\\n  function _tokenAddress() internal view returns (address) {\\n    return aToken.UNDERLYING_ASSET_ADDRESS();\\n  }\\n\\n  /// @notice Returns user total balance (in asset tokens). This includes the deposits and interest.\\n  /// @param addr User address\\n  /// @return The underlying balance of asset tokens\\n  function balanceOfToken(address addr) external override view returns (uint256) {\\n    return _sharesToToken(balanceOf(addr));\\n  }\\n\\n  /// @notice Calculates the number of shares that should be mint or burned when a user deposit or withdraw\\n  /// @param _tokens Amount of tokens\\n  /// @return Number of shares\\n  function _tokenToShares(uint256 _tokens) internal view returns (uint256) {\\n    uint256 _shares;\\n    uint256 _totalSupply = totalSupply();\\n\\n    if (_totalSupply == 0) {\\n      _shares = _tokens;\\n    } else {\\n      // rate = tokens / shares\\n      // shares = tokens * (totalShares / yieldSourceTotalSupply)\\n      uint256 _exchangeMantissa = FixedPoint.calculateMantissa(_totalSupply, aToken.balanceOf(address(this)));\\n      _shares = FixedPoint.multiplyUintByMantissa(_tokens, _exchangeMantissa);\\n    }\\n\\n    return _shares;\\n  }\\n\\n  /// @notice Calculates the number of tokens a user has in the yield source\\n  /// @param _shares Amount of shares\\n  /// @return Number of tokens\\n  function _sharesToToken(uint256 _shares) internal view returns (uint256) {\\n    uint256 _tokens;\\n    uint256 _totalSupply = totalSupply();\\n\\n    if (_totalSupply == 0) {\\n      _tokens = _shares;\\n    } else {\\n      // tokens = (shares * yieldSourceTotalSupply) / totalShares\\n      _tokens = _shares.mul(aToken.balanceOf(address(this))).div(_totalSupply);\\n    }\\n\\n    return _tokens;\\n  }\\n\\n  /// @notice Deposit asset tokens to Aave\\n  /// @param mintAmount The amount of asset tokens to be deposited\\n  function _depositToAave(uint256 mintAmount) internal {\\n    address _underlyingAssetAddress = _tokenAddress();\\n    ILendingPool __lendingPool = _lendingPool();\\n    IERC20 _depositToken = IERC20(_underlyingAssetAddress);\\n\\n    _depositToken.safeTransferFrom(msg.sender, address(this), mintAmount);\\n    __lendingPool.deposit(_underlyingAssetAddress, mintAmount, address(this), REFERRAL_CODE);\\n  }\\n\\n  /// @notice Supplies asset tokens to the yield source\\n  /// @dev Shares corresponding to the number of tokens supplied are mint to the user's balance\\n  /// @dev Asset tokens are supplied to the yield source, then deposited into Aave\\n  /// @param mintAmount The amount of asset tokens to be supplied\\n  /// @param to The user whose balance will receive the tokens\\n  function supplyTokenTo(uint256 mintAmount, address to) external override nonReentrant {\\n    uint256 shares = _tokenToShares(mintAmount);\\n\\n    require(shares > 0, \\\"ATokenYieldSource/shares-gt-zero\\\");\\n    _depositToAave(mintAmount);\\n    _mint(to, shares);\\n\\n    emit SuppliedTokenTo(msg.sender, shares, mintAmount, to);\\n  }\\n\\n  /// @notice Redeems asset tokens from the yield source\\n  /// @dev Shares corresponding to the number of tokens withdrawn are burnt from the user's balance\\n  /// @dev Asset tokens are withdrawn from Aave, then transferred from the yield source to the user's wallet\\n  /// @param redeemAmount The amount of asset tokens to be redeemed\\n  /// @return The actual amount of asset tokens that were redeemed\\n  function redeemToken(uint256 redeemAmount) external override nonReentrant returns (uint256) {\\n    address _underlyingAssetAddress = _tokenAddress();\\n    IERC20 _depositToken = IERC20(_underlyingAssetAddress);\\n\\n    uint256 shares = _tokenToShares(redeemAmount);\\n    _burn(msg.sender, shares);\\n\\n    uint256 beforeBalance = _depositToken.balanceOf(address(this));\\n    _lendingPool().withdraw(_underlyingAssetAddress, redeemAmount, address(this));\\n    uint256 afterBalance = _depositToken.balanceOf(address(this));\\n\\n    uint256 balanceDiff = afterBalance.sub(beforeBalance);\\n    _depositToken.safeTransfer(msg.sender, balanceDiff);\\n\\n    emit RedeemedToken(msg.sender, shares, redeemAmount);\\n    return balanceDiff;\\n  }\\n\\n  /// @notice Transfer ERC20 tokens other than the aTokens held by this contract to the recipient address\\n  /// @dev This function is only callable by the owner or asset manager\\n  /// @param erc20Token The ERC20 token to transfer\\n  /// @param to The recipient of the tokens\\n  /// @param amount The amount of tokens to transfer\\n  function transferERC20(IERC20 erc20Token, address to, uint256 amount) external override onlyManagerOrOwner {\\n    require(address(erc20Token) != address(aToken), \\\"ATokenYieldSource/aToken-transfer-not-allowed\\\");\\n    erc20Token.safeTransfer(to, amount);\\n    emit TransferredERC20(msg.sender, to, amount, erc20Token);\\n  }\\n\\n  /// @notice Allows someone to deposit into the yield source without receiving any shares\\n  /// @dev This allows anyone to distribute tokens among the share holders\\n  /// @param amount The amount of tokens to deposit\\n  function sponsor(uint256 amount) external override nonReentrant {\\n    _depositToAave(amount);\\n    emit Sponsored(msg.sender, amount);\\n  }\\n\\n  /// @notice Claims the accrued rewards for the aToken, accumulating any pending rewards.\\n  /// @param to Address where the claimed rewards will be sent.\\n  /// @return True if operation was successful.\\n  function claimRewards(address to) external onlyManagerOrOwner returns (bool) {\\n    require(to != address(0), \\\"ATokenYieldSource/recipient-not-zero-address\\\");\\n\\n    IAaveIncentivesController _incentivesController = incentivesController;\\n\\n    address[] memory _assets = new address[](1);\\n    _assets[0] = address(aToken);\\n\\n    uint256 _amount = _incentivesController.getRewardsBalance(_assets, address(this));\\n    uint256 _amountClaimed = _incentivesController.claimRewards(_assets, _amount, to);\\n\\n    emit Claimed(msg.sender, to, _amountClaimed);\\n    return true;\\n  }\\n\\n  /// @notice Retrieves Aave LendingPoolAddressesProvider address\\n  /// @return A reference to LendingPoolAddressesProvider interface\\n  function _lendingPoolProvider() internal view returns (ILendingPoolAddressesProvider) {\\n    return ILendingPoolAddressesProvider(lendingPoolAddressesProviderRegistry.getAddressesProvidersList()[ADDRESSES_PROVIDER_ID]);\\n  }\\n\\n  /// @notice Retrieves Aave LendingPool address\\n  /// @return A reference to LendingPool interface\\n  function _lendingPool() internal view returns (ILendingPool) {\\n    return ILendingPool(_lendingPoolProvider().getLendingPool());\\n  }\\n}\\n\",\"keccak256\":\"0xced090f5877e0cd939f445274c0e91d8f283ca9c35d6a98b664b9cb2b39b935a\",\"license\":\"GPL-3.0\"},\"@pooltogether/fixed-point/contracts/FixedPoint.sol\":{\"content\":\"/**\\nCopyright 2020 PoolTogether Inc.\\n\\nThis file is part of PoolTogether.\\n\\nPoolTogether is free software: you can redistribute it and/or modify\\nit under the terms of the GNU General Public License as published by\\nthe Free Software Foundation under version 3 of the License.\\n\\nPoolTogether is distributed in the hope that it will be useful,\\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\nGNU General Public License for more details.\\n\\nYou should have received a copy of the GNU General Public License\\nalong with PoolTogether.  If not, see <https://www.gnu.org/licenses/>.\\n*/\\n\\npragma solidity >=0.4.0;\\n\\nimport \\\"./external/openzeppelin/OpenZeppelinSafeMath_V3_3_0.sol\\\";\\n\\n/**\\n * @author Brendan Asselstine\\n * @notice Provides basic fixed point math calculations.\\n *\\n * This library calculates integer fractions by scaling values by 1e18 then performing standard integer math.\\n */\\nlibrary FixedPoint {\\n    using OpenZeppelinSafeMath_V3_3_0 for uint256;\\n\\n    // The scale to use for fixed point numbers.  Same as Ether for simplicity.\\n    uint256 internal constant SCALE = 1e18;\\n\\n    /**\\n        * Calculates a Fixed18 mantissa given the numerator and denominator\\n        *\\n        * The mantissa = (numerator * 1e18) / denominator\\n        *\\n        * @param numerator The mantissa numerator\\n        * @param denominator The mantissa denominator\\n        * @return The mantissa of the fraction\\n        */\\n    function calculateMantissa(uint256 numerator, uint256 denominator) internal pure returns (uint256) {\\n        uint256 mantissa = numerator.mul(SCALE);\\n        mantissa = mantissa.div(denominator);\\n        return mantissa;\\n    }\\n\\n    /**\\n        * Multiplies a Fixed18 number by an integer.\\n        *\\n        * @param b The whole integer to multiply\\n        * @param mantissa The Fixed18 number\\n        * @return An integer that is the result of multiplying the params.\\n        */\\n    function multiplyUintByMantissa(uint256 b, uint256 mantissa) internal pure returns (uint256) {\\n        uint256 result = mantissa.mul(b);\\n        result = result.div(SCALE);\\n        return result;\\n    }\\n\\n    /**\\n    * Divides an integer by a fixed point 18 mantissa\\n    *\\n    * @param dividend The integer to divide\\n    * @param mantissa The fixed point 18 number to serve as the divisor\\n    * @return An integer that is the result of dividing an integer by a fixed point 18 mantissa\\n    */\\n    function divideUintByMantissa(uint256 dividend, uint256 mantissa) internal pure returns (uint256) {\\n        uint256 result = SCALE.mul(dividend);\\n        result = result.div(mantissa);\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0x5f89a3e774fd543d6fb9bc56469eb0f9fb870fb8b2a01c623e4bb31139ef8bc8\"},\"@pooltogether/fixed-point/contracts/external/openzeppelin/OpenZeppelinSafeMath_V3_3_0.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n// NOTE: Copied from OpenZeppelin Contracts version 3.3.0\\n\\npragma solidity >=0.4.0;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary OpenZeppelinSafeMath_V3_3_0 {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts with custom message when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b != 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0x5715f9c8b03dd832dd0e21556431431c75b552d0c5904a89c4fcc17546ba54f4\",\"license\":\"MIT\"},\"@pooltogether/owner-manager-contracts/contracts/Manageable.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./Ownable.sol\\\";\\n\\n/**\\n * @title Abstract manageable contract that can be inherited by other contracts\\n * @notice Contract module based on Ownable which provides a basic access control mechanism, where\\n * there is an owner and a manager that can be granted exclusive access to specific functions.\\n *\\n * By default, the owner is the deployer of the contract.\\n *\\n * The owner account is set through a two steps process.\\n *      1. The current `owner` calls {transferOwnership} to set a `pendingOwner`\\n *      2. The `pendingOwner` calls {acceptOwnership} to accept the ownership transfer\\n *\\n * The manager account needs to be set using {setManager}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyManager`, which can be applied to your functions to restrict their use to\\n * the manager.\\n */\\nabstract contract Manageable is Ownable {\\n    address private _manager;\\n\\n    /**\\n     * @dev Emitted when `_manager` has been changed.\\n     * @param previousManager previous `_manager` address.\\n     * @param newManager new `_manager` address.\\n     */\\n    event ManagerTransferred(address indexed previousManager, address indexed newManager);\\n\\n    /* ============ External Functions ============ */\\n\\n    /**\\n     * @notice Gets current `_manager`.\\n     * @return Current `_manager` address.\\n     */\\n    function manager() public view virtual returns (address) {\\n        return _manager;\\n    }\\n\\n    /**\\n     * @notice Set or change of manager.\\n     * @dev Throws if called by any account other than the owner.\\n     * @param _newManager New _manager address.\\n     * @return Boolean to indicate if the operation was successful or not.\\n     */\\n    function setManager(address _newManager) external onlyOwner returns (bool) {\\n        return _setManager(_newManager);\\n    }\\n\\n    /* ============ Internal Functions ============ */\\n\\n    /**\\n     * @notice Set or change of manager.\\n     * @param _newManager New _manager address.\\n     * @return Boolean to indicate if the operation was successful or not.\\n     */\\n    function _setManager(address _newManager) private returns (bool) {\\n        address _previousManager = _manager;\\n\\n        require(_newManager != _previousManager, \\\"Manageable/existing-manager-address\\\");\\n\\n        _manager = _newManager;\\n\\n        emit ManagerTransferred(_previousManager, _newManager);\\n        return true;\\n    }\\n\\n    /* ============ Modifier Functions ============ */\\n\\n    /**\\n     * @dev Throws if called by any account other than the manager.\\n     */\\n    modifier onlyManager() {\\n        require(manager() == msg.sender, \\\"Manageable/caller-not-manager\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the manager or the owner.\\n     */\\n    modifier onlyManagerOrOwner() {\\n        require(manager() == msg.sender || owner() == msg.sender, \\\"Manageable/caller-not-manager-or-owner\\\");\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0xdd8ac008df192c6aa4df83e7037ab090970fda38e1f9fd712bc0ab5e0485fc04\",\"license\":\"GPL-3.0\"},\"@pooltogether/owner-manager-contracts/contracts/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title Abstract ownable contract that can be inherited by other contracts\\n * @notice Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner is the deployer of the contract.\\n *\\n * The owner account is set through a two steps process.\\n *      1. The current `owner` calls {transferOwnership} to set a `pendingOwner`\\n *      2. The `pendingOwner` calls {acceptOwnership} to accept the ownership transfer\\n *\\n * The manager account needs to be set using {setManager}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable {\\n    address private _owner;\\n    address private _pendingOwner;\\n\\n    /**\\n     * @dev Emitted when `_pendingOwner` has been changed.\\n     * @param pendingOwner new `_pendingOwner` address.\\n     */\\n    event OwnershipOffered(address indexed pendingOwner);\\n\\n    /**\\n     * @dev Emitted when `_owner` has been changed.\\n     * @param previousOwner previous `_owner` address.\\n     * @param newOwner new `_owner` address.\\n     */\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /* ============ Deploy ============ */\\n\\n    /**\\n     * @notice Initializes the contract setting `_initialOwner` as the initial owner.\\n     * @param _initialOwner Initial owner of the contract.\\n     */\\n    constructor(address _initialOwner) {\\n        _setOwner(_initialOwner);\\n    }\\n\\n    /* ============ External Functions ============ */\\n\\n    /**\\n     * @notice Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @notice Gets current `_pendingOwner`.\\n     * @return Current `_pendingOwner` address.\\n     */\\n    function pendingOwner() external view virtual returns (address) {\\n        return _pendingOwner;\\n    }\\n\\n    /**\\n     * @notice Renounce ownership of the contract.\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() external virtual onlyOwner {\\n        _setOwner(address(0));\\n    }\\n\\n    /**\\n    * @notice Allows current owner to set the `_pendingOwner` address.\\n    * @param _newOwner Address to transfer ownership to.\\n    */\\n    function transferOwnership(address _newOwner) external onlyOwner {\\n        require(_newOwner != address(0), \\\"Ownable/pendingOwner-not-zero-address\\\");\\n\\n        _pendingOwner = _newOwner;\\n\\n        emit OwnershipOffered(_newOwner);\\n    }\\n\\n    /**\\n    * @notice Allows the `_pendingOwner` address to finalize the transfer.\\n    * @dev This function is only callable by the `_pendingOwner`.\\n    */\\n    function claimOwnership() external onlyPendingOwner {\\n        _setOwner(_pendingOwner);\\n        _pendingOwner = address(0);\\n    }\\n\\n    /* ============ Internal Functions ============ */\\n\\n    /**\\n     * @notice Internal function to set the `_owner` of the contract.\\n     * @param _newOwner New `_owner` address.\\n     */\\n    function _setOwner(address _newOwner) private {\\n        address _oldOwner = _owner;\\n        _owner = _newOwner;\\n        emit OwnershipTransferred(_oldOwner, _newOwner);\\n    }\\n\\n    /* ============ Modifier Functions ============ */\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == msg.sender, \\\"Ownable/caller-not-owner\\\");\\n        _;\\n    }\\n\\n    /**\\n    * @dev Throws if called by any account other than the `pendingOwner`.\\n    */\\n    modifier onlyPendingOwner() {\\n        require(msg.sender == _pendingOwner, \\\"Ownable/caller-not-pendingOwner\\\");\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0xfd0fd374812c8af45f2633cc7cc4811ccb7bad0a3902a43aded35939eb4a00d1\",\"license\":\"GPL-3.0\"},\"@pooltogether/yield-source-interface/contracts/IYieldSource.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity >=0.6.0;\\n\\n/// @title Defines the functions used to interact with a yield source.  The Prize Pool inherits this contract.\\n/// @notice Prize Pools subclasses need to implement this interface so that yield can be generated.\\ninterface IYieldSource {\\n    /// @notice Returns the ERC20 asset token used for deposits.\\n    /// @return The ERC20 asset token address.\\n    function depositToken() external view returns (address);\\n\\n    /// @notice Returns the total balance (in asset tokens).  This includes the deposits and interest.\\n    /// @return The underlying balance of asset tokens.\\n    function balanceOfToken(address addr) external returns (uint256);\\n\\n    /// @notice Supplies tokens to the yield source.  Allows assets to be supplied on other user's behalf using the `to` param.\\n    /// @param amount The amount of asset tokens to be supplied.  Denominated in `depositToken()` as above.\\n    /// @param to The user whose balance will receive the tokens\\n    function supplyTokenTo(uint256 amount, address to) external;\\n\\n    /// @notice Redeems tokens from the yield source.\\n    /// @param amount The amount of asset tokens to withdraw.  Denominated in `depositToken()` as above.\\n    /// @return The actual amount of interst bearing tokens that were redeemed.\\n    function redeemToken(uint256 amount) external returns (uint256);\\n}\\n\",\"keccak256\":\"0x659c59f7b0a4cac6ce4c46a8ccec1d8d7ab14aa08451c0d521804fec9ccc95f1\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200383938038062003839833981016040819052620000349162000b64565b80828481600390805190602001906200004f9291906200092f565b508051620000659060049060208401906200092f565b5050506200007981620003a360201b60201c565b5060016008556001600160a01b038716620000ed5760405162461bcd60e51b815260206004820152602960248201527f41546f6b656e5969656c64536f757263652f61546f6b656e2d6e6f742d7a65726044820152686f2d6164647265737360b81b60648201526084015b60405180910390fd5b600980546001600160a01b0319166001600160a01b03898116919091179091558616620001835760405162461bcd60e51b815260206004820152603760248201527f41546f6b656e5969656c64536f757263652f696e63656e7469766573436f6e7460448201527f726f6c6c65722d6e6f742d7a65726f2d616464726573730000000000000000006064820152608401620000e4565b600a80546001600160a01b0319166001600160a01b03888116919091179091558516620002195760405162461bcd60e51b815260206004820152603660248201527f41546f6b656e5969656c64536f757263652f6c656e64696e67506f6f6c52656760448201527f69737472792d6e6f742d7a65726f2d61646472657373000000000000000000006064820152608401620000e4565b600b80546001600160a01b0319166001600160a01b038781169190911790915581166200029a5760405162461bcd60e51b815260206004820152602860248201527f41546f6b656e5969656c64536f757263652f6f776e65722d6e6f742d7a65726f6044820152672d6164647265737360c01b6064820152608401620000e4565b60008460ff1611620002fa5760405162461bcd60e51b815260206004820152602260248201527f41546f6b656e5969656c64536f757263652f646563696d616c732d67742d7a65604482015261726f60f01b6064820152608401620000e4565b600b805460ff60a01b1916600160a01b60ff8716021790556200034b62000320620003f5565b6000196200032d6200047a565b6001600160a01b0316620004c060201b620013d2179092919060201c565b866001600160a01b03167ffba57dff735bfaf5226b0a6e4ea8161ce10896963a36f6db20759f10b0055b4086868587866040516200038e95949392919062000ca2565b60405180910390a25050505050505062000df6565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000620004016200061f565b6001600160a01b0316630261bf8b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156200043a57600080fd5b505afa1580156200044f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000475919062000a5b565b905090565b600954604080516358b50cef60e11b815290516000926001600160a01b03169163b16a19de916004808301926020929190829003018186803b1580156200043a57600080fd5b8015806200054e5750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e9060440160206040518083038186803b1580156200051157600080fd5b505afa15801562000526573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200054c919062000c3c565b155b620005c25760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e6365000000000000000000006064820152608401620000e4565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b0390811663095ea7b360e01b179091526200061a918591620006c516565b505050565b600b546040805163365ccbbf60e01b815290516000926001600160a01b03169163365ccbbf9160048083019286929190829003018186803b1580156200066457600080fd5b505afa15801562000679573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620006a3919081019062000a7b565b600081518110620006b857620006b862000db1565b6020026020010151905090565b600062000721826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316620007a360201b6200157b179092919060201c565b8051909150156200061a578080602001905181019062000742919062000b40565b6200061a5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401620000e4565b6060620007b48484600085620007be565b90505b9392505050565b606082471015620008215760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401620000e4565b843b620008715760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401620000e4565b600080866001600160a01b031685876040516200088f919062000c84565b60006040518083038185875af1925050503d8060008114620008ce576040519150601f19603f3d011682016040523d82523d6000602084013e620008d3565b606091505b509092509050620008e6828286620008f1565b979650505050505050565b6060831562000902575081620007b7565b825115620009135782518084602001fd5b8160405162461bcd60e51b8152600401620000e4919062000cf9565b8280546200093d9062000d74565b90600052602060002090601f016020900481019282620009615760008555620009ac565b82601f106200097c57805160ff1916838001178555620009ac565b82800160010185558215620009ac579182015b82811115620009ac5782518255916020019190600101906200098f565b50620009ba929150620009be565b5090565b5b80821115620009ba5760008155600101620009bf565b8051620009e28162000ddd565b919050565b600082601f830112620009f957600080fd5b81516001600160401b0381111562000a155762000a1562000dc7565b62000a2a601f8201601f191660200162000d0e565b81815284602083860101111562000a4057600080fd5b62000a5382602083016020870162000d41565b949350505050565b60006020828403121562000a6e57600080fd5b8151620007b78162000ddd565b6000602080838503121562000a8f57600080fd5b82516001600160401b038082111562000aa757600080fd5b818501915085601f83011262000abc57600080fd5b81518181111562000ad15762000ad162000dc7565b8060051b915062000ae484830162000d0e565b8181528481019084860184860187018a101562000b0057600080fd5b600095505b8386101562000b33578051945062000b1d8562000ddd565b8483526001959095019491860191860162000b05565b5098975050505050505050565b60006020828403121562000b5357600080fd5b81518015158114620007b757600080fd5b600080600080600080600060e0888a03121562000b8057600080fd5b875162000b8d8162000ddd565b602089015190975062000ba08162000ddd565b604089015190965062000bb38162000ddd565b606089015190955060ff8116811462000bcb57600080fd5b60808901519094506001600160401b038082111562000be957600080fd5b62000bf78b838c01620009e7565b945060a08a015191508082111562000c0e57600080fd5b5062000c1d8a828b01620009e7565b92505062000c2e60c08901620009d5565b905092959891949750929550565b60006020828403121562000c4f57600080fd5b5051919050565b6000815180845262000c7081602086016020860162000d41565b601f01601f19169290920160200192915050565b6000825162000c9881846020870162000d41565b9190910192915050565b600060018060a01b03808816835260ff8716602084015260a0604084015262000ccf60a084018762000c56565b838103606085015262000ce3818762000c56565b9250508084166080840152509695505050505050565b602081526000620007b7602083018462000c56565b604051601f8201601f191681016001600160401b038111828210171562000d395762000d3962000dc7565b604052919050565b60005b8381101562000d5e57818101518382015260200162000d44565b8381111562000d6e576000848401525b50505050565b600181811c9082168062000d8957607f821691505b6020821081141562000dab57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811462000df357600080fd5b50565b612a338062000e066000396000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c806395d89b4111610104578063b99152d0116100a2578063dd62ed3e11610071578063dd62ed3e146103d7578063e30c397814610410578063ef5cfb8c14610421578063f2fde38b1461043457600080fd5b8063b99152d0146103a1578063c89039c5146103b4578063d0ebdbe7146103bc578063daa4f975146103cf57600080fd5b8063a457c2d7116100de578063a457c2d714610355578063a9059cbb14610368578063af1df2551461037b578063b6cce5e21461038e57600080fd5b806395d89b41146103275780639db5dbe41461032f578063a0c1f15e1461034257600080fd5b8063481c6a7511610171578063715018a61161014b578063715018a6146102e8578063873ba41e146102f057806387a6eeef146103035780638da5cb5b1461031657600080fd5b8063481c6a75146102905780634e71e0c8146102b557806370a08231146102bf57600080fd5b806318160ddd116101ad57806318160ddd1461023257806323b872dd1461023a578063313ce5671461024d578063395093511461027d57600080fd5b8063013054c2146101d457806306fdde03146101fa578063095ea7b31461020f575b600080fd5b6101e76101e2366004612785565b610447565b6040519081526020015b60405180910390f35b6102026106db565b6040516101f19190612899565b61022261021d36600461266b565b61076d565b60405190151581526020016101f1565b6002546101e7565b61022261024836600461262a565b610784565b600b5474010000000000000000000000000000000000000000900460ff1660405160ff90911681526020016101f1565b61022261028b36600461266b565b610845565b6007546001600160a01b03165b6040516001600160a01b0390911681526020016101f1565b6102bd610881565b005b6101e76102cd3660046125b7565b6001600160a01b031660009081526020819052604090205490565b6102bd61090f565b600b5461029d906001600160a01b031681565b6102bd6103113660046127b7565b610984565b6005546001600160a01b031661029d565b610202610a9c565b6102bd61033d36600461262a565b610aab565b60095461029d906001600160a01b031681565b61022261036336600461266b565b610c52565b61022261037636600461266b565b610d03565b600a5461029d906001600160a01b031681565b6102bd61039c366004612785565b610d10565b6101e76103af3660046125b7565b610dae565b61029d610dd0565b6102226103ca3660046125b7565b610ddf565b610222610e58565b6101e76103e53660046125f1565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6006546001600160a01b031661029d565b61022261042f3660046125b7565b610f8b565b6102bd6104423660046125b7565b611296565b6000600260085414156104a15760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b600260085560006104b0611592565b90508060006104be85611628565b90506104ca33826116e3565b6040516370a0823160e01b81523060048201526000906001600160a01b038416906370a082319060240160206040518083038186803b15801561050c57600080fd5b505afa158015610520573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610544919061279e565b905061054e611868565b6040517f69328dec0000000000000000000000000000000000000000000000000000000081526001600160a01b0386811660048301526024820189905230604483015291909116906369328dec90606401602060405180830381600087803b1580156105b957600080fd5b505af11580156105cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f1919061279e565b506040516370a0823160e01b81523060048201526000906001600160a01b038516906370a082319060240160206040518083038186803b15801561063457600080fd5b505afa158015610648573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066c919061279e565b9050600061067a82846118aa565b90506106906001600160a01b03861633836118b6565b60408051858152602081018a905233917f5c9b0a8fe13a826ca676f5ad4f98c747b5086beb79ab58589b8211b62fa32fb9910160405180910390a26001600855979650505050505050565b6060600380546106ea90612968565b80601f016020809104026020016040519081016040528092919081815260200182805461071690612968565b80156107635780601f1061073857610100808354040283529160200191610763565b820191906000526020600020905b81548152906001019060200180831161074657829003601f168201915b5050505050905090565b600061077a3384846118ff565b5060015b92915050565b6000610791848484611a57565b6001600160a01b03841660009081526001602090815260408083203384529091529020548281101561082b5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206160448201527f6c6c6f77616e63650000000000000000000000000000000000000000000000006064820152608401610498565b61083885338584036118ff565b60019150505b9392505050565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161077a91859061087c9086906128cc565b6118ff565b6006546001600160a01b031633146108db5760405162461bcd60e51b815260206004820152601f60248201527f4f776e61626c652f63616c6c65722d6e6f742d70656e64696e674f776e6572006044820152606401610498565b6006546108f0906001600160a01b0316611c70565b6006805473ffffffffffffffffffffffffffffffffffffffff19169055565b336109226005546001600160a01b031690565b6001600160a01b0316146109785760405162461bcd60e51b815260206004820152601860248201527f4f776e61626c652f63616c6c65722d6e6f742d6f776e657200000000000000006044820152606401610498565b6109826000611c70565b565b600260085414156109d75760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610498565b600260085560006109e783611628565b905060008111610a395760405162461bcd60e51b815260206004820181905260248201527f41546f6b656e5969656c64536f757263652f7368617265732d67742d7a65726f6044820152606401610498565b610a4283611ccf565b610a4c8282611d8b565b60408051828152602081018590526001600160a01b0384169133917fdef5cc95ad9b1c65c586d0fce815ec764b575719636edf58ff2553ae6f110452910160405180910390a35050600160085550565b6060600480546106ea90612968565b33610abe6007546001600160a01b031690565b6001600160a01b03161480610aec575033610ae16005546001600160a01b031690565b6001600160a01b0316145b610b5e5760405162461bcd60e51b815260206004820152602660248201527f4d616e61676561626c652f63616c6c65722d6e6f742d6d616e616765722d6f7260448201527f2d6f776e657200000000000000000000000000000000000000000000000000006064820152608401610498565b6009546001600160a01b0384811691161415610be25760405162461bcd60e51b815260206004820152602d60248201527f41546f6b656e5969656c64536f757263652f61546f6b656e2d7472616e73666560448201527f722d6e6f742d616c6c6f776564000000000000000000000000000000000000006064820152608401610498565b610bf66001600160a01b03841683836118b6565b826001600160a01b0316826001600160a01b0316336001600160a01b03167f29fcb7bb954d37295343e742bab21760748bdba4e026e4469a8100183996913884604051610c4591815260200190565b60405180910390a4505050565b3360009081526001602090815260408083206001600160a01b038616845290915281205482811015610cec5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152608401610498565b610cf933858584036118ff565b5060019392505050565b600061077a338484611a57565b60026008541415610d635760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610498565b6002600855610d7181611ccf565b60405181815233907fbb2c10eb8b0d65523a501a1c079906e38af3c4231e31b799d408daacd7ce72269060200160405180910390a2506001600855565b6001600160a01b03811660009081526020819052604081205461077e90611e6a565b6000610dda611592565b905090565b600033610df46005546001600160a01b031690565b6001600160a01b031614610e4a5760405162461bcd60e51b815260206004820152601860248201527f4f776e61626c652f63616c6c65722d6e6f742d6f776e657200000000000000006044820152606401610498565b61077e82611f17565b919050565b600033610e6d6005546001600160a01b031690565b6001600160a01b031614610ec35760405162461bcd60e51b815260206004820152601860248201527f4f776e61626c652f63616c6c65722d6e6f742d6f776e657200000000000000006044820152606401610498565b6000610ecd611868565b90506000610ed9611592565b604051636eb1769f60e11b81523060048201526001600160a01b03848116602483015291925060009183169063dd62ed3e9060440160206040518083038186803b158015610f2657600080fd5b505afa158015610f3a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f5e919061279e565b9050610f8183610f70600019846118aa565b6001600160a01b0385169190612003565b6001935050505090565b600033610fa06007546001600160a01b031690565b6001600160a01b03161480610fce575033610fc36005546001600160a01b031690565b6001600160a01b0316145b6110405760405162461bcd60e51b815260206004820152602660248201527f4d616e61676561626c652f63616c6c65722d6e6f742d6d616e616765722d6f7260448201527f2d6f776e657200000000000000000000000000000000000000000000000000006064820152608401610498565b6001600160a01b0382166110bc5760405162461bcd60e51b815260206004820152602c60248201527f41546f6b656e5969656c64536f757263652f726563697069656e742d6e6f742d60448201527f7a65726f2d6164647265737300000000000000000000000000000000000000006064820152608401610498565b600a546040805160018082528183019092526001600160a01b039092169160009160208083019080368337505060095482519293506001600160a01b03169183915060009061110d5761110d6129b9565b6001600160a01b0392831660209182029290920101526040517f8b599f26000000000000000000000000000000000000000000000000000000008152600091841690638b599f2690611165908590309060040161283c565b60206040518083038186803b15801561117d57600080fd5b505afa158015611191573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111b5919061279e565b90506000836001600160a01b0316633111e7b38484896040518463ffffffff1660e01b81526004016111e993929190612867565b602060405180830381600087803b15801561120357600080fd5b505af1158015611217573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061123b919061279e565b9050856001600160a01b0316336001600160a01b03167ff7a40077ff7a04c7e61f6f26fb13774259ddf1b6bce9ecf26a8276cdd39926838360405161128291815260200190565b60405180910390a350600195945050505050565b336112a96005546001600160a01b031690565b6001600160a01b0316146112ff5760405162461bcd60e51b815260206004820152601860248201527f4f776e61626c652f63616c6c65722d6e6f742d6f776e657200000000000000006044820152606401610498565b6001600160a01b03811661137b5760405162461bcd60e51b815260206004820152602560248201527f4f776e61626c652f70656e64696e674f776e65722d6e6f742d7a65726f2d616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610498565b6006805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040517f239a2ddded15777fa246aed5f7e1a9bc69a39d4eb4a397034d1d85766cca7d4c90600090a250565b80158061145b5750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e9060440160206040518083038186803b15801561142157600080fd5b505afa158015611435573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611459919061279e565b155b6114cd5760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e6365000000000000000000006064820152608401610498565b6040516001600160a01b0383166024820152604481018290526115769084907f095ea7b300000000000000000000000000000000000000000000000000000000906064015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091526120dd565b505050565b606061158a84846000856121c2565b949350505050565b600954604080517fb16a19de00000000000000000000000000000000000000000000000000000000815290516000926001600160a01b03169163b16a19de916004808301926020929190829003018186803b1580156115f057600080fd5b505afa158015611604573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dda91906125d4565b600080600061163660025490565b905080611645578391506116dc565b6009546040516370a0823160e01b81523060048201526000916116cc9184916001600160a01b0316906370a082319060240160206040518083038186803b15801561168f57600080fd5b505afa1580156116a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116c7919061279e565b612301565b90506116d88582612322565b9250505b5092915050565b6001600160a01b03821661175f5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f73000000000000000000000000000000000000000000000000000000000000006064820152608401610498565b6001600160a01b038216600090815260208190526040902054818110156117ee5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f63650000000000000000000000000000000000000000000000000000000000006064820152608401610498565b6001600160a01b038316600090815260208190526040812083830390556002805484929061181d908490612925565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b6000611872612343565b6001600160a01b0316630261bf8b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156115f057600080fd5b600061083e8284612925565b6040516001600160a01b0383166024820152604481018290526115769084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401611512565b6001600160a01b03831661197a5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610498565b6001600160a01b0382166119f65760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608401610498565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316611ad35760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610498565b6001600160a01b038216611b4f5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152608401610498565b6001600160a01b03831660009081526020819052604090205481811015611bde5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152608401610498565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290611c159084906128cc565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051611c6191815260200190565b60405180910390a35b50505050565b600580546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000611cd9611592565b90506000611ce5611868565b905081611cfd6001600160a01b0382163330876123fb565b6040517fe8eda9df0000000000000000000000000000000000000000000000000000000081526001600160a01b0384811660048301526024820186905230604483015260bc606483015283169063e8eda9df90608401600060405180830381600087803b158015611d6d57600080fd5b505af1158015611d81573d6000803e3d6000fd5b5050505050505050565b6001600160a01b038216611de15760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610498565b8060026000828254611df391906128cc565b90915550506001600160a01b03821660009081526020819052604081208054839290611e209084906128cc565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6000806000611e7860025490565b905080611e87578391506116dc565b6009546040516370a0823160e01b815230600482015261158a918391611f11916001600160a01b0316906370a082319060240160206040518083038186803b158015611ed257600080fd5b505afa158015611ee6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f0a919061279e565b879061244c565b90612458565b6007546000906001600160a01b03908116908316811415611fa05760405162461bcd60e51b815260206004820152602360248201527f4d616e61676561626c652f6578697374696e672d6d616e616765722d6164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152608401610498565b6007805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0385811691821790925560405190918316907f9cb45c728de594dab506a1f1a8554e24c8eeaf983618d5ec5dd7bc6f3c49feee90600090a350600192915050565b604051636eb1769f60e11b81523060048201526001600160a01b038381166024830152600091839186169063dd62ed3e9060440160206040518083038186803b15801561204f57600080fd5b505afa158015612063573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612087919061279e565b61209191906128cc565b6040516001600160a01b038516602482015260448101829052909150611c6a9085907f095ea7b30000000000000000000000000000000000000000000000000000000090606401611512565b6000612132826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661157b9092919063ffffffff16565b80519091501561157657808060200190518101906121509190612763565b6115765760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610498565b60608247101561223a5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610498565b843b6122885760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610498565b600080866001600160a01b031685876040516122a49190612820565b60006040518083038185875af1925050503d80600081146122e1576040519150601f19603f3d011682016040523d82523d6000602084013e6122e6565b606091505b50915091506122f6828286612464565b979650505050505050565b60008061231684670de0b6b3a764000061249d565b905061158a8184612538565b60008061232f838561249d565b905061158a81670de0b6b3a7640000612538565b600b54604080517f365ccbbf00000000000000000000000000000000000000000000000000000000815290516000926001600160a01b03169163365ccbbf9160048083019286929190829003018186803b1580156123a057600080fd5b505afa1580156123b4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526123dc9190810190612697565b6000815181106123ee576123ee6129b9565b6020026020010151905090565b6040516001600160a01b0380851660248301528316604482015260648101829052611c6a9085907f23b872dd0000000000000000000000000000000000000000000000000000000090608401611512565b600061083e8284612906565b600061083e82846128e4565b6060831561247357508161083e565b8251156124835782518084602001fd5b8160405162461bcd60e51b81526004016104989190612899565b6000826124ac5750600061077e565b60006124b88385612906565b9050826124c585836128e4565b1461083e5760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60448201527f77000000000000000000000000000000000000000000000000000000000000006064820152608401610498565b600061083e83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250600081836125965760405162461bcd60e51b81526004016104989190612899565b5060006125a384866128e4565b95945050505050565b8051610e53816129e5565b6000602082840312156125c957600080fd5b813561083e816129e5565b6000602082840312156125e657600080fd5b815161083e816129e5565b6000806040838503121561260457600080fd5b823561260f816129e5565b9150602083013561261f816129e5565b809150509250929050565b60008060006060848603121561263f57600080fd5b833561264a816129e5565b9250602084013561265a816129e5565b929592945050506040919091013590565b6000806040838503121561267e57600080fd5b8235612689816129e5565b946020939093013593505050565b600060208083850312156126aa57600080fd5b825167ffffffffffffffff808211156126c257600080fd5b818501915085601f8301126126d657600080fd5b8151818111156126e8576126e86129cf565b8060051b604051601f19603f8301168101818110858211171561270d5761270d6129cf565b604052828152858101935084860182860187018a101561272c57600080fd5b600095505b8386101561275657612742816125ac565b855260019590950194938601938601612731565b5098975050505050505050565b60006020828403121561277557600080fd5b8151801515811461083e57600080fd5b60006020828403121561279757600080fd5b5035919050565b6000602082840312156127b057600080fd5b5051919050565b600080604083850312156127ca57600080fd5b82359150602083013561261f816129e5565b600081518084526020808501945080840160005b838110156128155781516001600160a01b0316875295820195908201906001016127f0565b509495945050505050565b6000825161283281846020870161293c565b9190910192915050565b60408152600061284f60408301856127dc565b90506001600160a01b03831660208301529392505050565b60608152600061287a60608301866127dc565b90508360208301526001600160a01b0383166040830152949350505050565b60208152600082518060208401526128b881604085016020870161293c565b601f01601f19169190910160400192915050565b600082198211156128df576128df6129a3565b500190565b60008261290157634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615612920576129206129a3565b500290565b600082821015612937576129376129a3565b500390565b60005b8381101561295757818101518382015260200161293f565b83811115611c6a5750506000910152565b600181811c9082168061297c57607f821691505b6020821081141561299d57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146129fa57600080fd5b5056fea2646970667358221220bafefb8a602953385da2093e50f6477e48073573dabaa176d9c977920a5676dc64736f6c63430008060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101cf5760003560e01c806395d89b4111610104578063b99152d0116100a2578063dd62ed3e11610071578063dd62ed3e146103d7578063e30c397814610410578063ef5cfb8c14610421578063f2fde38b1461043457600080fd5b8063b99152d0146103a1578063c89039c5146103b4578063d0ebdbe7146103bc578063daa4f975146103cf57600080fd5b8063a457c2d7116100de578063a457c2d714610355578063a9059cbb14610368578063af1df2551461037b578063b6cce5e21461038e57600080fd5b806395d89b41146103275780639db5dbe41461032f578063a0c1f15e1461034257600080fd5b8063481c6a7511610171578063715018a61161014b578063715018a6146102e8578063873ba41e146102f057806387a6eeef146103035780638da5cb5b1461031657600080fd5b8063481c6a75146102905780634e71e0c8146102b557806370a08231146102bf57600080fd5b806318160ddd116101ad57806318160ddd1461023257806323b872dd1461023a578063313ce5671461024d578063395093511461027d57600080fd5b8063013054c2146101d457806306fdde03146101fa578063095ea7b31461020f575b600080fd5b6101e76101e2366004612785565b610447565b6040519081526020015b60405180910390f35b6102026106db565b6040516101f19190612899565b61022261021d36600461266b565b61076d565b60405190151581526020016101f1565b6002546101e7565b61022261024836600461262a565b610784565b600b5474010000000000000000000000000000000000000000900460ff1660405160ff90911681526020016101f1565b61022261028b36600461266b565b610845565b6007546001600160a01b03165b6040516001600160a01b0390911681526020016101f1565b6102bd610881565b005b6101e76102cd3660046125b7565b6001600160a01b031660009081526020819052604090205490565b6102bd61090f565b600b5461029d906001600160a01b031681565b6102bd6103113660046127b7565b610984565b6005546001600160a01b031661029d565b610202610a9c565b6102bd61033d36600461262a565b610aab565b60095461029d906001600160a01b031681565b61022261036336600461266b565b610c52565b61022261037636600461266b565b610d03565b600a5461029d906001600160a01b031681565b6102bd61039c366004612785565b610d10565b6101e76103af3660046125b7565b610dae565b61029d610dd0565b6102226103ca3660046125b7565b610ddf565b610222610e58565b6101e76103e53660046125f1565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6006546001600160a01b031661029d565b61022261042f3660046125b7565b610f8b565b6102bd6104423660046125b7565b611296565b6000600260085414156104a15760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b600260085560006104b0611592565b90508060006104be85611628565b90506104ca33826116e3565b6040516370a0823160e01b81523060048201526000906001600160a01b038416906370a082319060240160206040518083038186803b15801561050c57600080fd5b505afa158015610520573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610544919061279e565b905061054e611868565b6040517f69328dec0000000000000000000000000000000000000000000000000000000081526001600160a01b0386811660048301526024820189905230604483015291909116906369328dec90606401602060405180830381600087803b1580156105b957600080fd5b505af11580156105cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f1919061279e565b506040516370a0823160e01b81523060048201526000906001600160a01b038516906370a082319060240160206040518083038186803b15801561063457600080fd5b505afa158015610648573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066c919061279e565b9050600061067a82846118aa565b90506106906001600160a01b03861633836118b6565b60408051858152602081018a905233917f5c9b0a8fe13a826ca676f5ad4f98c747b5086beb79ab58589b8211b62fa32fb9910160405180910390a26001600855979650505050505050565b6060600380546106ea90612968565b80601f016020809104026020016040519081016040528092919081815260200182805461071690612968565b80156107635780601f1061073857610100808354040283529160200191610763565b820191906000526020600020905b81548152906001019060200180831161074657829003601f168201915b5050505050905090565b600061077a3384846118ff565b5060015b92915050565b6000610791848484611a57565b6001600160a01b03841660009081526001602090815260408083203384529091529020548281101561082b5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206160448201527f6c6c6f77616e63650000000000000000000000000000000000000000000000006064820152608401610498565b61083885338584036118ff565b60019150505b9392505050565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161077a91859061087c9086906128cc565b6118ff565b6006546001600160a01b031633146108db5760405162461bcd60e51b815260206004820152601f60248201527f4f776e61626c652f63616c6c65722d6e6f742d70656e64696e674f776e6572006044820152606401610498565b6006546108f0906001600160a01b0316611c70565b6006805473ffffffffffffffffffffffffffffffffffffffff19169055565b336109226005546001600160a01b031690565b6001600160a01b0316146109785760405162461bcd60e51b815260206004820152601860248201527f4f776e61626c652f63616c6c65722d6e6f742d6f776e657200000000000000006044820152606401610498565b6109826000611c70565b565b600260085414156109d75760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610498565b600260085560006109e783611628565b905060008111610a395760405162461bcd60e51b815260206004820181905260248201527f41546f6b656e5969656c64536f757263652f7368617265732d67742d7a65726f6044820152606401610498565b610a4283611ccf565b610a4c8282611d8b565b60408051828152602081018590526001600160a01b0384169133917fdef5cc95ad9b1c65c586d0fce815ec764b575719636edf58ff2553ae6f110452910160405180910390a35050600160085550565b6060600480546106ea90612968565b33610abe6007546001600160a01b031690565b6001600160a01b03161480610aec575033610ae16005546001600160a01b031690565b6001600160a01b0316145b610b5e5760405162461bcd60e51b815260206004820152602660248201527f4d616e61676561626c652f63616c6c65722d6e6f742d6d616e616765722d6f7260448201527f2d6f776e657200000000000000000000000000000000000000000000000000006064820152608401610498565b6009546001600160a01b0384811691161415610be25760405162461bcd60e51b815260206004820152602d60248201527f41546f6b656e5969656c64536f757263652f61546f6b656e2d7472616e73666560448201527f722d6e6f742d616c6c6f776564000000000000000000000000000000000000006064820152608401610498565b610bf66001600160a01b03841683836118b6565b826001600160a01b0316826001600160a01b0316336001600160a01b03167f29fcb7bb954d37295343e742bab21760748bdba4e026e4469a8100183996913884604051610c4591815260200190565b60405180910390a4505050565b3360009081526001602090815260408083206001600160a01b038616845290915281205482811015610cec5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152608401610498565b610cf933858584036118ff565b5060019392505050565b600061077a338484611a57565b60026008541415610d635760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610498565b6002600855610d7181611ccf565b60405181815233907fbb2c10eb8b0d65523a501a1c079906e38af3c4231e31b799d408daacd7ce72269060200160405180910390a2506001600855565b6001600160a01b03811660009081526020819052604081205461077e90611e6a565b6000610dda611592565b905090565b600033610df46005546001600160a01b031690565b6001600160a01b031614610e4a5760405162461bcd60e51b815260206004820152601860248201527f4f776e61626c652f63616c6c65722d6e6f742d6f776e657200000000000000006044820152606401610498565b61077e82611f17565b919050565b600033610e6d6005546001600160a01b031690565b6001600160a01b031614610ec35760405162461bcd60e51b815260206004820152601860248201527f4f776e61626c652f63616c6c65722d6e6f742d6f776e657200000000000000006044820152606401610498565b6000610ecd611868565b90506000610ed9611592565b604051636eb1769f60e11b81523060048201526001600160a01b03848116602483015291925060009183169063dd62ed3e9060440160206040518083038186803b158015610f2657600080fd5b505afa158015610f3a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f5e919061279e565b9050610f8183610f70600019846118aa565b6001600160a01b0385169190612003565b6001935050505090565b600033610fa06007546001600160a01b031690565b6001600160a01b03161480610fce575033610fc36005546001600160a01b031690565b6001600160a01b0316145b6110405760405162461bcd60e51b815260206004820152602660248201527f4d616e61676561626c652f63616c6c65722d6e6f742d6d616e616765722d6f7260448201527f2d6f776e657200000000000000000000000000000000000000000000000000006064820152608401610498565b6001600160a01b0382166110bc5760405162461bcd60e51b815260206004820152602c60248201527f41546f6b656e5969656c64536f757263652f726563697069656e742d6e6f742d60448201527f7a65726f2d6164647265737300000000000000000000000000000000000000006064820152608401610498565b600a546040805160018082528183019092526001600160a01b039092169160009160208083019080368337505060095482519293506001600160a01b03169183915060009061110d5761110d6129b9565b6001600160a01b0392831660209182029290920101526040517f8b599f26000000000000000000000000000000000000000000000000000000008152600091841690638b599f2690611165908590309060040161283c565b60206040518083038186803b15801561117d57600080fd5b505afa158015611191573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111b5919061279e565b90506000836001600160a01b0316633111e7b38484896040518463ffffffff1660e01b81526004016111e993929190612867565b602060405180830381600087803b15801561120357600080fd5b505af1158015611217573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061123b919061279e565b9050856001600160a01b0316336001600160a01b03167ff7a40077ff7a04c7e61f6f26fb13774259ddf1b6bce9ecf26a8276cdd39926838360405161128291815260200190565b60405180910390a350600195945050505050565b336112a96005546001600160a01b031690565b6001600160a01b0316146112ff5760405162461bcd60e51b815260206004820152601860248201527f4f776e61626c652f63616c6c65722d6e6f742d6f776e657200000000000000006044820152606401610498565b6001600160a01b03811661137b5760405162461bcd60e51b815260206004820152602560248201527f4f776e61626c652f70656e64696e674f776e65722d6e6f742d7a65726f2d616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610498565b6006805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040517f239a2ddded15777fa246aed5f7e1a9bc69a39d4eb4a397034d1d85766cca7d4c90600090a250565b80158061145b5750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e9060440160206040518083038186803b15801561142157600080fd5b505afa158015611435573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611459919061279e565b155b6114cd5760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e6365000000000000000000006064820152608401610498565b6040516001600160a01b0383166024820152604481018290526115769084907f095ea7b300000000000000000000000000000000000000000000000000000000906064015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091526120dd565b505050565b606061158a84846000856121c2565b949350505050565b600954604080517fb16a19de00000000000000000000000000000000000000000000000000000000815290516000926001600160a01b03169163b16a19de916004808301926020929190829003018186803b1580156115f057600080fd5b505afa158015611604573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dda91906125d4565b600080600061163660025490565b905080611645578391506116dc565b6009546040516370a0823160e01b81523060048201526000916116cc9184916001600160a01b0316906370a082319060240160206040518083038186803b15801561168f57600080fd5b505afa1580156116a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116c7919061279e565b612301565b90506116d88582612322565b9250505b5092915050565b6001600160a01b03821661175f5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f73000000000000000000000000000000000000000000000000000000000000006064820152608401610498565b6001600160a01b038216600090815260208190526040902054818110156117ee5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f63650000000000000000000000000000000000000000000000000000000000006064820152608401610498565b6001600160a01b038316600090815260208190526040812083830390556002805484929061181d908490612925565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b6000611872612343565b6001600160a01b0316630261bf8b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156115f057600080fd5b600061083e8284612925565b6040516001600160a01b0383166024820152604481018290526115769084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401611512565b6001600160a01b03831661197a5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610498565b6001600160a01b0382166119f65760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608401610498565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316611ad35760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610498565b6001600160a01b038216611b4f5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152608401610498565b6001600160a01b03831660009081526020819052604090205481811015611bde5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152608401610498565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290611c159084906128cc565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051611c6191815260200190565b60405180910390a35b50505050565b600580546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000611cd9611592565b90506000611ce5611868565b905081611cfd6001600160a01b0382163330876123fb565b6040517fe8eda9df0000000000000000000000000000000000000000000000000000000081526001600160a01b0384811660048301526024820186905230604483015260bc606483015283169063e8eda9df90608401600060405180830381600087803b158015611d6d57600080fd5b505af1158015611d81573d6000803e3d6000fd5b5050505050505050565b6001600160a01b038216611de15760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610498565b8060026000828254611df391906128cc565b90915550506001600160a01b03821660009081526020819052604081208054839290611e209084906128cc565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6000806000611e7860025490565b905080611e87578391506116dc565b6009546040516370a0823160e01b815230600482015261158a918391611f11916001600160a01b0316906370a082319060240160206040518083038186803b158015611ed257600080fd5b505afa158015611ee6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f0a919061279e565b879061244c565b90612458565b6007546000906001600160a01b03908116908316811415611fa05760405162461bcd60e51b815260206004820152602360248201527f4d616e61676561626c652f6578697374696e672d6d616e616765722d6164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152608401610498565b6007805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0385811691821790925560405190918316907f9cb45c728de594dab506a1f1a8554e24c8eeaf983618d5ec5dd7bc6f3c49feee90600090a350600192915050565b604051636eb1769f60e11b81523060048201526001600160a01b038381166024830152600091839186169063dd62ed3e9060440160206040518083038186803b15801561204f57600080fd5b505afa158015612063573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612087919061279e565b61209191906128cc565b6040516001600160a01b038516602482015260448101829052909150611c6a9085907f095ea7b30000000000000000000000000000000000000000000000000000000090606401611512565b6000612132826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661157b9092919063ffffffff16565b80519091501561157657808060200190518101906121509190612763565b6115765760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610498565b60608247101561223a5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610498565b843b6122885760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610498565b600080866001600160a01b031685876040516122a49190612820565b60006040518083038185875af1925050503d80600081146122e1576040519150601f19603f3d011682016040523d82523d6000602084013e6122e6565b606091505b50915091506122f6828286612464565b979650505050505050565b60008061231684670de0b6b3a764000061249d565b905061158a8184612538565b60008061232f838561249d565b905061158a81670de0b6b3a7640000612538565b600b54604080517f365ccbbf00000000000000000000000000000000000000000000000000000000815290516000926001600160a01b03169163365ccbbf9160048083019286929190829003018186803b1580156123a057600080fd5b505afa1580156123b4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526123dc9190810190612697565b6000815181106123ee576123ee6129b9565b6020026020010151905090565b6040516001600160a01b0380851660248301528316604482015260648101829052611c6a9085907f23b872dd0000000000000000000000000000000000000000000000000000000090608401611512565b600061083e8284612906565b600061083e82846128e4565b6060831561247357508161083e565b8251156124835782518084602001fd5b8160405162461bcd60e51b81526004016104989190612899565b6000826124ac5750600061077e565b60006124b88385612906565b9050826124c585836128e4565b1461083e5760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60448201527f77000000000000000000000000000000000000000000000000000000000000006064820152608401610498565b600061083e83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250600081836125965760405162461bcd60e51b81526004016104989190612899565b5060006125a384866128e4565b95945050505050565b8051610e53816129e5565b6000602082840312156125c957600080fd5b813561083e816129e5565b6000602082840312156125e657600080fd5b815161083e816129e5565b6000806040838503121561260457600080fd5b823561260f816129e5565b9150602083013561261f816129e5565b809150509250929050565b60008060006060848603121561263f57600080fd5b833561264a816129e5565b9250602084013561265a816129e5565b929592945050506040919091013590565b6000806040838503121561267e57600080fd5b8235612689816129e5565b946020939093013593505050565b600060208083850312156126aa57600080fd5b825167ffffffffffffffff808211156126c257600080fd5b818501915085601f8301126126d657600080fd5b8151818111156126e8576126e86129cf565b8060051b604051601f19603f8301168101818110858211171561270d5761270d6129cf565b604052828152858101935084860182860187018a101561272c57600080fd5b600095505b8386101561275657612742816125ac565b855260019590950194938601938601612731565b5098975050505050505050565b60006020828403121561277557600080fd5b8151801515811461083e57600080fd5b60006020828403121561279757600080fd5b5035919050565b6000602082840312156127b057600080fd5b5051919050565b600080604083850312156127ca57600080fd5b82359150602083013561261f816129e5565b600081518084526020808501945080840160005b838110156128155781516001600160a01b0316875295820195908201906001016127f0565b509495945050505050565b6000825161283281846020870161293c565b9190910192915050565b60408152600061284f60408301856127dc565b90506001600160a01b03831660208301529392505050565b60608152600061287a60608301866127dc565b90508360208301526001600160a01b0383166040830152949350505050565b60208152600082518060208401526128b881604085016020870161293c565b601f01601f19169190910160400192915050565b600082198211156128df576128df6129a3565b500190565b60008261290157634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615612920576129206129a3565b500290565b600082821015612937576129376129a3565b500390565b60005b8381101561295757818101518382015260200161293f565b83811115611c6a5750506000910152565b600181811c9082168061297c57607f821691505b6020821081141561299d57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146129fa57600080fd5b5056fea2646970667358221220bafefb8a602953385da2093e50f6477e48073573dabaa176d9c977920a5676dc64736f6c63430008060033",
  "devdoc": {
    "details": "This contract inherits from the ERC20 implementation to keep track of users depositsThis contract inherits AssetManager which extends OwnableUpgradable",
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "approveMaxAmount()": {
        "details": "Emergency function to re-approve max amount if approval amount dropped too low",
        "returns": {
          "_0": "true if operation is successful"
        }
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "balanceOfToken(address)": {
        "params": {
          "addr": "User address"
        },
        "returns": {
          "_0": "The underlying balance of asset tokens"
        }
      },
      "claimOwnership()": {
        "details": "This function is only callable by the `_pendingOwner`."
      },
      "claimRewards(address)": {
        "params": {
          "to": "Address where the claimed rewards will be sent."
        },
        "returns": {
          "_0": "True if operation was successful."
        }
      },
      "constructor": {
        "params": {
          "_aToken": "Aave aToken address",
          "_decimals": "Number of decimals the shares (inhereted ERC20) will have. Set as same as underlying asset to ensure sane ExchangeRates",
          "_incentivesController": "Aave incentivesController address",
          "_lendingPoolAddressesProviderRegistry": "Aave lendingPoolAddressesProviderRegistry address",
          "_name": "Token name for the underlying shares ERC20",
          "_symbol": "Token symbol for the underlying shares ERC20"
        }
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "depositToken()": {
        "returns": {
          "_0": "The ERC20 asset token address"
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "manager()": {
        "returns": {
          "_0": "Current `_manager` address."
        }
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "pendingOwner()": {
        "returns": {
          "_0": "Current `_pendingOwner` address."
        }
      },
      "redeemToken(uint256)": {
        "details": "Shares corresponding to the number of tokens withdrawn are burnt from the user's balanceAsset tokens are withdrawn from Aave, then transferred from the yield source to the user's wallet",
        "params": {
          "redeemAmount": "The amount of asset tokens to be redeemed"
        },
        "returns": {
          "_0": "The actual amount of asset tokens that were redeemed"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setManager(address)": {
        "details": "Throws if called by any account other than the owner.",
        "params": {
          "_newManager": "New _manager address."
        },
        "returns": {
          "_0": "Boolean to indicate if the operation was successful or not."
        }
      },
      "sponsor(uint256)": {
        "details": "This allows anyone to distribute tokens among the share holders",
        "params": {
          "amount": "The amount of tokens to deposit"
        }
      },
      "supplyTokenTo(uint256,address)": {
        "details": "Shares corresponding to the number of tokens supplied are mint to the user's balanceAsset tokens are supplied to the yield source, then deposited into Aave",
        "params": {
          "mintAmount": "The amount of asset tokens to be supplied",
          "to": "The user whose balance will receive the tokens"
        }
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferERC20(address,address,uint256)": {
        "details": "This function is only callable by the owner or asset manager",
        "params": {
          "amount": "The amount of tokens to transfer",
          "erc20Token": "The ERC20 token to transfer",
          "to": "The recipient of the tokens"
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "params": {
          "_newOwner": "Address to transfer ownership to."
        }
      }
    },
    "stateVariables": {
      "ADDRESSES_PROVIDER_ID": {
        "details": "Aave genesis market LendingPoolAddressesProvider's IDThis variable could evolve in the future if we decide to support other markets"
      },
      "REFERRAL_CODE": {
        "details": "PoolTogether's Aave Referral Code"
      }
    },
    "title": "Aave Yield Source integration contract, implementing PoolTogether's generic yield source interface",
    "version": 1
  },
  "userdoc": {
    "events": {
      "ATokenYieldSourceInitialized(address,address,uint8,string,string,address)": {
        "notice": "Emitted when the yield source is initialized"
      },
      "Claimed(address,address,uint256)": {
        "notice": "Emitted when Aave rewards have been claimed"
      },
      "RedeemedToken(address,uint256,uint256)": {
        "notice": "Emitted when asset tokens are redeemed from the yield source"
      },
      "Sponsored(address,uint256)": {
        "notice": "Emitted when asset tokens are supplied to sponsor the yield source"
      },
      "SuppliedTokenTo(address,uint256,uint256,address)": {
        "notice": "Emitted when asset tokens are supplied to the yield source"
      },
      "TransferredERC20(address,address,uint256,address)": {
        "notice": "Emitted when ERC20 tokens other than yield source's aToken are withdrawn from the yield source"
      }
    },
    "kind": "user",
    "methods": {
      "aToken()": {
        "notice": "Interface for the yield-bearing Aave aToken"
      },
      "approveMaxAmount()": {
        "notice": "Approve lending pool contract to spend max uint256 amount"
      },
      "balanceOfToken(address)": {
        "notice": "Returns user total balance (in asset tokens). This includes the deposits and interest."
      },
      "claimOwnership()": {
        "notice": "Allows the `_pendingOwner` address to finalize the transfer."
      },
      "claimRewards(address)": {
        "notice": "Claims the accrued rewards for the aToken, accumulating any pending rewards."
      },
      "constructor": {
        "notice": "Initializes the yield source with Aave aToken"
      },
      "depositToken()": {
        "notice": "Returns the ERC20 asset token used for deposits"
      },
      "incentivesController()": {
        "notice": "Interface for Aave incentivesController"
      },
      "lendingPoolAddressesProviderRegistry()": {
        "notice": "Interface for Aave lendingPoolAddressesProviderRegistry"
      },
      "manager()": {
        "notice": "Gets current `_manager`."
      },
      "owner()": {
        "notice": "Returns the address of the current owner."
      },
      "pendingOwner()": {
        "notice": "Gets current `_pendingOwner`."
      },
      "redeemToken(uint256)": {
        "notice": "Redeems asset tokens from the yield source"
      },
      "renounceOwnership()": {
        "notice": "Renounce ownership of the contract."
      },
      "setManager(address)": {
        "notice": "Set or change of manager."
      },
      "sponsor(uint256)": {
        "notice": "Allows someone to deposit into the yield source without receiving any shares"
      },
      "supplyTokenTo(uint256,address)": {
        "notice": "Supplies asset tokens to the yield source"
      },
      "transferERC20(address,address,uint256)": {
        "notice": "Transfer ERC20 tokens other than the aTokens held by this contract to the recipient address"
      },
      "transferOwnership(address)": {
        "notice": "Allows current owner to set the `_pendingOwner` address."
      }
    },
    "notice": "Yield source for a PoolTogether prize pool that generates yield by depositing into Aave V2",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 55,
        "contract": "@pooltogether/aave-yield-source/contracts/yield-source/ATokenYieldSource.sol:ATokenYieldSource",
        "label": "_balances",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 61,
        "contract": "@pooltogether/aave-yield-source/contracts/yield-source/ATokenYieldSource.sol:ATokenYieldSource",
        "label": "_allowances",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 63,
        "contract": "@pooltogether/aave-yield-source/contracts/yield-source/ATokenYieldSource.sol:ATokenYieldSource",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 65,
        "contract": "@pooltogether/aave-yield-source/contracts/yield-source/ATokenYieldSource.sol:ATokenYieldSource",
        "label": "_name",
        "offset": 0,
        "slot": "3",
        "type": "t_string_storage"
      },
      {
        "astId": 67,
        "contract": "@pooltogether/aave-yield-source/contracts/yield-source/ATokenYieldSource.sol:ATokenYieldSource",
        "label": "_symbol",
        "offset": 0,
        "slot": "4",
        "type": "t_string_storage"
      },
      {
        "astId": 4754,
        "contract": "@pooltogether/aave-yield-source/contracts/yield-source/ATokenYieldSource.sol:ATokenYieldSource",
        "label": "_owner",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      },
      {
        "astId": 4756,
        "contract": "@pooltogether/aave-yield-source/contracts/yield-source/ATokenYieldSource.sol:ATokenYieldSource",
        "label": "_pendingOwner",
        "offset": 0,
        "slot": "6",
        "type": "t_address"
      },
      {
        "astId": 4652,
        "contract": "@pooltogether/aave-yield-source/contracts/yield-source/ATokenYieldSource.sol:ATokenYieldSource",
        "label": "_manager",
        "offset": 0,
        "slot": "7",
        "type": "t_address"
      },
      {
        "astId": 10,
        "contract": "@pooltogether/aave-yield-source/contracts/yield-source/ATokenYieldSource.sol:ATokenYieldSource",
        "label": "_status",
        "offset": 0,
        "slot": "8",
        "type": "t_uint256"
      },
      {
        "astId": 3656,
        "contract": "@pooltogether/aave-yield-source/contracts/yield-source/ATokenYieldSource.sol:ATokenYieldSource",
        "label": "aToken",
        "offset": 0,
        "slot": "9",
        "type": "t_contract(ATokenInterface)3080"
      },
      {
        "astId": 3660,
        "contract": "@pooltogether/aave-yield-source/contracts/yield-source/ATokenYieldSource.sol:ATokenYieldSource",
        "label": "incentivesController",
        "offset": 0,
        "slot": "10",
        "type": "t_contract(IAaveIncentivesController)3316"
      },
      {
        "astId": 3664,
        "contract": "@pooltogether/aave-yield-source/contracts/yield-source/ATokenYieldSource.sol:ATokenYieldSource",
        "label": "lendingPoolAddressesProviderRegistry",
        "offset": 0,
        "slot": "11",
        "type": "t_contract(ILendingPoolAddressesProviderRegistry)3531"
      },
      {
        "astId": 3666,
        "contract": "@pooltogether/aave-yield-source/contracts/yield-source/ATokenYieldSource.sol:ATokenYieldSource",
        "label": "__decimals",
        "offset": 20,
        "slot": "11",
        "type": "t_uint8"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(ATokenInterface)3080": {
        "encoding": "inplace",
        "label": "contract ATokenInterface",
        "numberOfBytes": "20"
      },
      "t_contract(IAaveIncentivesController)3316": {
        "encoding": "inplace",
        "label": "contract IAaveIncentivesController",
        "numberOfBytes": "20"
      },
      "t_contract(ILendingPoolAddressesProviderRegistry)3531": {
        "encoding": "inplace",
        "label": "contract ILendingPoolAddressesProviderRegistry",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}